{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","paymentMethod","item","existItem","find","x","map","filter","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","t","useTranslation","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","a","removeItem","document","location","href","getUserDetails","id","getState","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","i18n","console","log","language","useSelector","useEffect","elements","querySelectorAll","forEach","element","classList","add","remove","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","props","style","backgroundColor","onClick","lng","changeLanguage","Nav","Link","NavDropdown","title","Item","isAdmin","Footer","Row","Col","Rating","text","color","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","conten","Homescreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","rounded","marginTop","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNumber","setPhoneNumber","required","PlaceOrderScreen","num","itemsPrice","Math","round","shippingPrice","direction","index","createOrder","OrderScreen","orderId","loadingPay","successPay","loadingDeliver","successDeliver","country","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","Check","label","checked","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","basename","path","component","exact","HomeScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","react","useSuspense","keySeparator","ReactDOM","getElementById"],"mappings":"iPAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAEvBC,EAAgC,gCAChCC,EAAgC,gCAChCC,EAA6B,6BAC7BC,EAA8B,8BAE9BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mB,QC7BnBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAA6B,6BAC7BC,EAAmB,mBCHnBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBACpBC,EAAqB,qBAErBC,EAA8B,8BAC9BC,EAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAE5BC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBC/BpBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAqB,qBAErBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAClBC,GAAmB,mBAEnBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCI7BC,GAAUC,0BAAgB,CAC5BC,YCL8B,WAAuC,IAAtCC,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACpE,OAAQA,EAAOC,MACX,KAAKnF,EACD,MAAO,CAAEoF,SAAS,EAAMH,SAAU,IACtC,KAAKhF,EACD,MAAO,CACHmF,SAAS,EACTH,SAAUC,EAAOG,QAAQJ,SACzBK,MAAOJ,EAAOG,QAAQC,MACtBC,KAAML,EAAOG,QAAQE,MAE7B,KAAKrF,EACD,MAAO,CAAEkF,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDRfS,eCYiC,WAG/B,IAFFT,EAEC,uDAFO,CAAEU,QAAS,CAAEC,QAAS,KAC9BT,EACC,uCACD,OAAQA,EAAOC,MACX,KAAKhF,EAED,OAAO,2BAAK6E,GAAZ,IAAmBI,SAAS,IAChC,KAAKhF,EACD,MAAO,CAAEgF,SAAS,EAAOM,QAASR,EAAOG,SAC7C,KAAKhF,EACD,MAAO,CAAE+E,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDxBfY,cC4BgC,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK7E,EACD,MAAO,CAAE8E,SAAS,GACtB,KAAK7E,EACD,MAAO,CAAE6E,SAAS,EAAOS,SAAS,GACtC,KAAKrF,EACD,MAAO,CAAE4E,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IDpCfc,cCwCgC,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIE,EAAW,uCACxD,OAAQA,EAAOC,MACX,KAAK1E,EACD,MAAO,CAAE2E,SAAS,GACtB,KAAK1E,EACD,MAAO,CAAE0E,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC5D,KAAK1E,EACD,MAAO,CAAEyE,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKzE,EACD,MAAO,GACX,QACI,OAAOoE,IDlDfe,cCsDgC,WAAsC,IAArCf,EAAoC,uDAA5B,CAAEU,QAAS,IAAMR,EAAW,uCACrE,OAAQA,EAAOC,MACX,KAAKtE,EACD,MAAO,CAAEuE,SAAS,GACtB,KAAKtE,EACD,MAAO,CAAEsE,SAAS,EAAOS,SAAS,EAAMH,QAASR,EAAOG,SAC5D,KAAKtE,EACD,MAAO,CAAEqE,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKrE,EACD,MAAO,CAAE0E,QAAS,IACtB,QACI,OAAOV,IDhEfgB,oBCoEsC,WAAyB,IAAxBhB,EAAuB,uDAAf,GAAIE,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKlE,EACD,MAAO,CAAEmE,SAAS,GACtB,KAAKlE,EACD,MAAO,CAAEkE,SAAS,EAAOS,SAAS,GACtC,KAAK1E,EACD,MAAO,CAAEiE,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKjE,EACD,MAAO,GACX,QACI,OAAO4D,ID9EfiB,gBCkFkC,WAAuC,IAAtCjB,EAAqC,uDAA7B,CAAEC,SAAU,IAAMC,EAAW,uCACxE,OAAQA,EAAOC,MACX,KAAK9D,EACD,MAAO,CAAE+D,SAAS,EAAMH,SAAU,IACtC,KAAK3D,EACD,MAAO,CAAE8D,SAAS,EAAOH,SAAUC,EAAOG,SAC9C,KAAK9D,EACD,MAAO,CAAE6D,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,ID1FfkB,KEhCuB,WAOrB,IANFlB,EAMC,uDANO,CACJmB,UAAW,GACXC,gBAAiB,GACjBC,cAAe,IAEnBnB,EACC,uCACD,OAAQA,EAAOC,MACX,KAAK3D,EACD,IAAM8E,EAAOpB,EAAOG,QACdkB,EAAYvB,EAAMmB,UAAUK,MAC9B,SAACC,GAAD,OAAOA,EAAEf,UAAYY,EAAKZ,WAG9B,OAAIa,EACO,2BACAvB,GADP,IAEImB,UAAWnB,EAAMmB,UAAUO,KAAI,SAACD,GAAD,OAC3BA,EAAEf,UAAYa,EAAUb,QAAUY,EAAOG,OAI1C,2BACAzB,GADP,IAEImB,UAAU,GAAD,mBAAMnB,EAAMmB,WAAZ,CAAuBG,MAG5C,KAAK7E,EACD,OAAO,2BACAuD,GADP,IAEImB,UAAWnB,EAAMmB,UAAUQ,QACvB,SAACL,GAAD,OAAUA,EAAKZ,UAAYR,EAAOG,aAI9C,KAAK3D,EACD,OAAO,2BACAsD,GADP,IAEIoB,gBAAiBlB,EAAOG,UAGhC,KAAK1D,EACD,OAAO,2BACAqD,GADP,IAEImB,UAAW,KAEnB,QACI,OAAOnB,IFff4B,UGX4B,WAAyB,IAAxB5B,EAAuB,uDAAf,GAAIE,EAAW,uCACpD,OAAQA,EAAOC,MACX,KAAKvD,EACD,MAAO,CAAEwD,SAAS,GACtB,KAAKvD,EACD,MAAO,CAAEuD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,KAAKvD,EACD,MAAO,CAAEsD,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKtD,EACD,MAAO,GACX,QACI,OAAOiD,IHCf8B,aGG+B,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKnD,EACD,MAAO,CAAEoD,SAAS,GACtB,KAAKnD,EACD,MAAO,CAAEmD,SAAS,EAAOyB,SAAU3B,EAAOG,SAC9C,KAAKnD,EACD,MAAO,CAAEkD,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKtD,EACD,MAAO,GACX,QACI,OAAOiD,IHbf+B,YGiB8B,WAAmC,IAAlC/B,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKhD,EACD,OAAO,2BAAK6C,GAAZ,IAAmBI,SAAS,IAChC,KAAKhD,EACD,MAAO,CAAEgD,SAAS,EAAO4B,KAAM9B,EAAOG,SAC1C,KAAKhD,EACD,MAAO,CAAE+C,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK/C,EACD,MAAO,CAAE0E,KAAM,IACnB,QACI,OAAOhC,IH3BfiC,kBG+BoC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIE,EAAW,uCAC5D,OAAQA,EAAOC,MACX,KAAK5C,EACD,MAAO,CAAE6C,SAAS,GACtB,KAAK5C,EACD,MAAO,CAAE4C,SAAS,EAAOS,SAAS,EAAMgB,SAAU3B,EAAOG,SAC7D,KAAK5C,GACD,MAAO,CAAE2C,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAK3C,GACD,MAAO,GACX,QACI,OAAOsC,IHzCfkC,SG6C2B,WAAoC,IAAnClC,EAAkC,uDAA1B,CAAEmC,MAAO,IAAMjC,EAAW,uCAC9D,OAAQA,EAAOC,MACX,KAAKxC,GACD,MAAO,CAAEyC,SAAS,GACtB,KAAKxC,GACD,MAAO,CAAEwC,SAAS,EAAO+B,MAAOjC,EAAOG,SAC3C,KAAKxC,GACD,MAAO,CAAEuC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKvC,GACD,MAAO,CAAEqE,MAAO,IACpB,QACI,OAAOnC,IHvDfoC,WG2D8B,WAAyB,IAAxBpC,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAKpC,GACD,MAAO,CAAEqC,SAAS,GACtB,KAAKpC,GACD,MAAO,CAAEoC,SAAS,EAAOS,SAAS,GACtC,KAAK5C,GACD,MAAO,CAAEmC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,QACI,OAAOL,IHnEfqC,WGuE6B,WAAmC,IAAlCrC,EAAiC,uDAAzB,CAAEgC,KAAM,IAAM9B,EAAW,uCAC/D,OAAQA,EAAOC,MACX,KAAKjC,GACD,MAAO,CAAEkC,SAAS,GACtB,KAAKjC,GACD,MAAO,CAAEiC,SAAS,EAAOS,SAAS,GACtC,KAAKzC,GACD,MAAO,CAAEgC,SAAS,EAAOI,MAAON,EAAOG,SAC3C,KAAKhC,GACD,MAAO,CAAE2D,KAAM,IACnB,QACI,OAAOhC,IHjFfsC,YIrB8B,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIE,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAK7B,GACD,MAAO,CAAE8B,SAAS,GACtB,KAAK7B,GACD,MAAO,CACH6B,SAAS,EACTS,SAAS,EACT0B,MAAOrC,EAAOG,SAEtB,KAAK7B,GACD,MAAO,CACH4B,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAK5B,GACD,MAAO,GACX,QACI,OAAOuB,IJIfwC,aIA+B,WAG7B,IAFFxC,EAEC,uDAFO,CAAEI,SAAS,EAAMqC,WAAY,GAAIrB,gBAAiB,IAC1DlB,EACC,uCACD,OAAQA,EAAOC,MACX,KAAKzB,GACD,OAAO,2BAAKsB,GAAZ,IAAmBI,SAAS,IAChC,KAAKzB,GACD,MAAO,CACHyB,SAAS,EACTmC,MAAOrC,EAAOG,SAEtB,KAAKzB,GACD,MAAO,CACHwB,SAAS,EACTI,MAAON,EAAOG,SAEtB,QACI,OAAOL,IJjBf0C,SIqB2B,WAAyB,IAAxB1C,EAAuB,uDAAf,GAAIE,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKtB,GACD,MAAO,CAAEuB,SAAS,GACtB,KAAKtB,GACD,MAAO,CACHsB,SAAS,EACTS,SAAS,GAEjB,KAAK9B,GACD,MAAO,CACHqB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKrB,GACD,MAAO,GACX,QACI,OAAOgB,IJrCf2C,aIyC+B,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIE,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKV,GACD,MAAO,CAAEW,SAAS,GACtB,KAAKV,GACD,MAAO,CACHU,SAAS,EACTS,SAAS,GAEjB,KAAKlB,GACD,MAAO,CACHS,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKT,GACD,MAAO,GACX,QACI,OAAOI,IJzDf4C,YI6D8B,WAAqC,IAApC5C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCAClE,OAAQA,EAAOC,MACX,KAAKlB,GACD,MAAO,CACHmB,SAAS,GAEjB,KAAKlB,GACD,MAAO,CACHkB,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKlB,GACD,MAAO,CACHiB,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKjB,GACD,MAAO,CAAEyD,OAAQ,IACrB,QACI,OAAO7C,IJ/Ef8C,UImF4B,WAAqC,IAApC9C,EAAmC,uDAA3B,CAAE6C,OAAQ,IAAM3C,EAAW,uCAChE,OAAQA,EAAOC,MACX,KAAKd,GACD,MAAO,CACHe,SAAS,GAEjB,KAAKd,GACD,MAAO,CACHc,SAAS,EACTyC,OAAQ3C,EAAOG,SAEvB,KAAKd,GACD,MAAO,CACHa,SAAS,EACTI,MAAON,EAAOG,SAEtB,KAAKb,GACD,MAAO,CAAEqD,OAAQ,IACrB,QACI,OAAO7C,MJnGb+C,GAAuBC,aAAaC,QAAQ,aAC5CC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GAEAG,GAAsBJ,aAAaC,QAAQ,YAC3CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAMAI,GAAe,CACjBnC,KAAM,CACFC,UAAW4B,GACX3B,gBAP2B4B,aAAaC,QAAQ,mBAClDC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,IAOFrB,UAAW,CAAEC,SAAUuB,KAGrBE,GAAa,CAACC,KAQLC,GANDC,sBACV5D,GACAwD,GACAK,8BAAoBC,kBAAe,WAAf,EAAmBL,M,wHK/C5BM,GA7BG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACDC,mBAAS,IADR,oBACxBC,EADwB,KACfC,EADe,KAEvBC,EAAMC,eAAND,EAWR,OACI,eAACE,GAAA,EAAD,CAAMC,SAVY,SAACC,GACnBA,EAAEC,iBACEP,EAAQQ,OACRV,EAAQW,KAAR,kBAAwBT,IAExBF,EAAQW,KAAK,MAKcC,QAAM,EAArC,UACI,cAACN,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACLwE,KAAK,IACLC,SAAU,SAACP,GAAD,OAAOL,EAAWK,EAAEQ,OAAOC,QACrCC,YAAad,EAAE,mBACfe,UAAU,oBAEd,cAACC,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,kBAAkBF,UAAU,MAA1D,SACKf,EAAE,gB,gDCyCNkB,GAAS,2DAAM,WAAOC,GAAP,UAAAC,EAAA,sDACxBrC,aAAasC,WAAW,YACxBtC,aAAasC,WAAW,aACxBtC,aAAasC,WAAW,mBACxBtC,aAAasC,WAAW,iBAExBF,EAAS,CAAEjF,KAAMpD,IACjBqI,EAAS,CAAEjF,KAAM7C,IACjB8H,EAAS,CAAEjF,KAAMrC,KACjBsH,EAAS,CAAEjF,KAAMf,KACjBgG,EAAS,CAAEjF,KAAMX,KAEjB+F,SAASC,SAASC,KAAO,SAZD,4CAAN,uDAuDTC,GAAiB,SAACC,GAAD,gDAAQ,WAAOP,EAAUQ,GAAjB,0BAAAP,EAAA,sEAE9BD,EAAS,CACLjF,KAAMhD,IAHoB,EAQ1ByI,IADa/D,EAPa,EAO1BD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYlE,EAASmE,SAbZ,SAiBPC,KAAMC,IAAN,qBAAwBP,GAAME,GAjBvB,gBAiBtBM,EAjBsB,EAiBtBA,KAERf,EAAS,CACLjF,KAAM/C,EACNiD,QAAS8F,IArBiB,kDA6Bd,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAM9C,EACNgD,QAAS+F,IAnCiB,0DAAR,yDCJfE,GA7GA,WACX,IAAMlB,EAAWmB,cADA,EAEGrC,eAAZD,EAFS,EAETA,EAAGuC,EAFM,EAENA,KACXC,QAAQC,IAAIF,EAAKG,UAEjB,IACQ9E,EADU+E,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,SAwBR,OAbAgF,qBAAU,WACN,IAAIC,EAAWvB,SAASwB,iBAAiB,KACnB,OAAlBP,EAAKG,SACLG,EAASE,SAAQ,SAACC,GACdA,EAAQC,UAAUC,IAAI,aAG1BL,EAASE,SAAQ,SAACC,GACdA,EAAQC,UAAUE,OAAO,gBAMjC,iCACI,cAACC,GAAA,EAAD,CAAQC,GAAG,OAAOpC,QAAQ,OAAOqC,OAAO,KAAKC,kBAAgB,EAA7D,SACI,eAACC,GAAA,EAAD,WACI,cAAC,iBAAD,CAAeC,GAAG,IAAlB,SACI,cAACL,GAAA,EAAOM,MAAR,6BAEJ,cAACN,GAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,eAACR,GAAA,EAAOS,SAAR,CAAiBnC,GAAG,mBAApB,UACI,cAAC,KAAD,CACIoC,OAAQ,SAACC,GAAD,OACJ,cAAC,GAAD,CAAWnE,QAASmE,EAAMnE,aAGlC,cAACoB,GAAA,EAAD,CACID,UAAU,kBACViD,MAAO,CAAEC,gBAAiB,eAC1BC,QAnCD,WACnB,IAAMC,EAAwB,OAAlB5B,EAAKG,UAAsBH,EAAKG,SAAkB,KAAP,KACvDH,EAAK6B,eAAeD,IA8BJ,SAKuB,OAAlB5B,EAAKG,UAAsBH,EAAKG,SAE3B,UADA,+CAGV,eAAC2B,GAAA,EAAD,WACI,cAAC,iBAAD,CAAeZ,GAAG,QAAlB,SACI,eAACY,GAAA,EAAIC,KAAL,WACI,mBAAGvD,UAAU,yBACZf,EAAE,aAGVpC,EACG,eAAC2G,GAAA,EAAD,CACIC,MAAO5G,EAAS8C,KAChBgB,GAAG,WAFP,UAII,cAAC,iBAAD,CAAe+B,GAAG,WAAlB,SACI,cAACc,GAAA,EAAYE,KAAb,UACKzE,EAAE,eAGX,cAACuE,GAAA,EAAYE,KAAb,CAAkBP,QA9D5B,WAClB/C,EAASD,OA6DmB,SACKlB,EAAE,eAIX,cAAC,iBAAD,CAAeyD,GAAG,SAAlB,SACI,eAACY,GAAA,EAAIC,KAAL,WACI,mBAAGvD,UAAU,gBACZf,EAAE,gBAIdpC,GAAYA,EAAS8G,SAClB,eAACH,GAAA,EAAD,CAAaC,MAAM,QAAQ9C,GAAG,YAA9B,UACI,cAAC,iBAAD,CAAe+B,GAAG,kBAAlB,SACI,cAACc,GAAA,EAAYE,KAAb,sBAIJ,cAAC,iBAAD,CAAehB,GAAG,qBAAlB,SACI,cAACc,GAAA,EAAYE,KAAb,yBAIJ,cAAC,iBAAD,CAAehB,GAAG,mBAAlB,SACI,cAACc,GAAA,EAAYE,KAAb,wC,mBCxFzBE,GAdA,WACX,OACI,iCACI,cAACnB,GAAA,EAAD,UACI,cAACoB,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAK9D,UAAU,mBAAf,gD,UCLd+D,GAAS,SAAC,GAA4B,IAA1BjE,EAAyB,EAAzBA,MAAOkE,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,OACI,sBAAKjE,UAAU,SAAf,UACI,+BACI,mBACIiD,MAAO,CAAEgB,SACTjE,UACIF,GAAS,EACH,cACAA,GAAS,GACT,uBACA,cAPd,SAUK,QAGT,+BACI,mBACImD,MAAO,CAAEgB,SACTjE,UACIF,GAAS,EACH,cACAA,GAAS,IACT,uBACA,cAPd,SAUK,QAGT,+BACI,mBACImD,MAAO,CAAEgB,SACTjE,UACIF,GAAS,EACH,cACAA,GAAS,IACT,uBACA,cAPd,SAUK,QAGT,+BACI,mBACImD,MAAO,CAAEgB,SACTjE,UACIF,GAAS,EACH,cACAA,GAAS,IACT,uBACA,cAPd,SAUK,QAGT,+BACI,mBACImD,MAAO,CAAEgB,SACTjE,UACIF,GAAS,EACH,cACAA,GAAS,IACT,uBACA,cAPd,SAUK,QAIT,+BAAOkE,GAAQA,QAK3BD,GAAOG,aAAe,CAClBD,MAAO,WASIF,UCzDAI,GA7BC,SAAC,GAAiB,IAAfzI,EAAc,EAAdA,QACPuD,EAAMC,eAAND,EAER,OACI,eAACmF,GAAA,EAAD,CAAMpE,UAAU,mBAAhB,UACI,cAAC,QAAD,CAAM0C,GAAE,mBAAchH,EAAQ2I,KAA9B,SACI,cAACD,GAAA,EAAKE,IAAN,CAAUC,IAAK7I,EAAQ8I,MAAOtE,QAAQ,UAG1C,eAACkE,GAAA,EAAKK,KAAN,WACI,cAAC,QAAD,CAAM/B,GAAE,mBAAchH,EAAQ2I,KAA9B,SACI,cAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACI,iCAASjJ,EAAQiE,WAIzB,cAACyE,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACI,cAAC,GAAD,CACI7E,MAAOpE,EAAQmJ,OACfb,KAAI,UAAKtI,EAAQoJ,WAAb,YAA2B7F,EAAE,gBAIzC,eAACmF,GAAA,EAAKQ,KAAN,CAAWD,GAAG,KAAd,mBAA2BjJ,EAAQqJ,gB,UC1B7CC,GAAU,SAAC,GAA2B,IAAzB9E,EAAwB,EAAxBA,QAAS+E,EAAe,EAAfA,SACxB,OAAO,cAACC,GAAA,EAAD,CAAOhF,QAASA,EAAhB,SAA0B+E,KAGrCD,GAAQd,aAAe,CACnBhE,QAAS,QAGE8E,U,UCYAG,GAnBA,WAAO,IACVlG,EAAMC,eAAND,EAER,OACI,cAACmG,GAAA,EAAD,CACIC,UAAU,SACVC,KAAK,SACLrC,MAAO,CACHsC,MAAO,QACPC,OAAQ,QACRC,OAAQ,OACRC,QAAS,SAPjB,SAUI,sBAAM1F,UAAU,UAAhB,SAA2Bf,EAAE,mB,UCW1B0G,GAzBE,SAAC,GAAoD,IAAlDrK,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAA0C,IAApCoI,eAAoC,aAAnB5E,eAAmB,MAAT,GAAS,EACjE,OACIzD,EAAQ,GACJ,cAACsK,GAAA,EAAD,UACK,YAAIC,MAAMvK,GAAOwK,QAAQpJ,KAAI,SAACD,GAAD,OAC1B,cAAC,iBAAD,CAEIiG,GACKiB,EAAD,6BAI4BlH,EAAI,GAH1BsC,EAAO,kBACQA,EADR,iBACwBtC,EAAI,GAD5B,gBAEMA,EAAI,GAN/B,SAUI,cAACmJ,GAAA,EAAWlC,KAAZ,CAAiBqC,OAAQtJ,EAAI,IAAMlB,EAAnC,SACKkB,EAAI,KAVJA,EAAI,S,oBCgBpBuJ,GAAe,eAACjH,EAAD,uDAAW,GAAIkH,EAAf,uDAA4B,GAA5B,gDAAmC,WAC3D7F,GAD2D,kBAAAC,EAAA,sEAIvDD,EAAS,CAAEjF,KAAMnF,IAJsC,SAMhCiL,KAAMC,IAAN,gCACMnC,EADN,uBAC4BkH,IAPI,gBAM/C9E,EAN+C,EAM/CA,KAIRf,EAAS,CAAEjF,KAAMlF,EAAsBoF,QAAS8F,IAVO,gDAYvDf,EAAS,CACLjF,KAAMjF,EACNmF,QACI,KAAMgG,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAjBmC,yDAAnC,uDAsBf8E,GAAqB,SAACvF,GAAD,gDAAQ,WAAOP,GAAP,kBAAAC,EAAA,sEAElCD,EAAS,CAAEjF,KAAMhF,IAFiB,SAIX8K,KAAMC,IAAN,wBAA2BP,IAJhB,gBAI1BQ,EAJ0B,EAI1BA,KAERf,EAAS,CAAEjF,KAAM/E,EAAyBiF,QAAS8F,IANjB,gDAQlCf,EAAS,CACLjF,KAAM9E,EACNgF,QACI,KAAMgG,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAbc,yDAAR,uDCRnB+E,GAhCS,WACpB,IAAM/F,EAAWmB,cAEXtF,EAAkB2F,aAAY,SAAC5G,GAAD,OAAWA,EAAMiB,mBAC7Cb,EAA6Ba,EAA7Bb,QAASI,EAAoBS,EAApBT,MAAOP,EAAagB,EAAbhB,SAMxB,OAJA4G,qBAAU,WACNzB,ED4NuB,yCAAM,WAAOA,GAAP,kBAAAC,EAAA,sEAE7BD,EAAS,CAAEjF,KAAM9D,IAFY,SAIN4J,KAAMC,IAAN,qBAJM,gBAIrBC,EAJqB,EAIrBA,KAERf,EAAS,CAAEjF,KAAM7D,EAAqB+D,QAAS8F,IANlB,gDAQ7Bf,EAAS,CACLjF,KAAM5D,EACN8D,QACI,KAAMgG,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAbS,yDAAN,yDC3NxB,CAAChB,IAEGhF,EACH,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,cAAC4K,GAAA,EAAD,CAAUC,MAAM,QAAQrG,UAAU,UAAlC,SACK/E,EAASyB,KAAI,SAAChB,GAAD,OACV,cAAC0K,GAAA,EAAS1C,KAAV,UACI,eAAC,QAAD,CAAMhB,GAAE,mBAAchH,EAAQ2I,KAA9B,UACI,cAACiC,GAAA,EAAD,CAAO/B,IAAK7I,EAAQ8I,MAAO+B,IAAK7K,EAAQiE,KAAM6G,OAAK,IACnD,cAACJ,GAAA,EAASK,QAAV,CAAkBzG,UAAU,mBAA5B,SACI,+BACKtE,EAAQiE,KADb,WAC4BjE,EAAQqJ,MADpC,aAJQrJ,EAAQ2I,W,SCtBtCqC,GAAO,SAAC,GAAsC,IAApCjD,EAAmC,EAAnCA,MAAOkD,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAChC,OACI,eAACC,GAAA,EAAD,WACI,gCAAQpD,IACR,sBAAM9D,KAAK,cAAcmH,OAAQH,IACjC,sBAAMhH,KAAK,WAAWmH,OAAQF,QAK1CF,GAAKxC,aAAe,CAChBT,MAAO,0BACPkD,YAAa,sCACbC,SAAU,mDAGCF,UC4CAK,GAlDI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACV/H,EAAMC,eAAND,EAEFF,EAAUiI,EAAMC,OAAOlI,QACvBkH,EAAae,EAAMC,OAAOhB,YAAc,EAExC7F,EAAWmB,cAEXxG,EAAc6G,aAAY,SAAC5G,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAMzC,OAJAsG,qBAAU,WACNzB,EAAS4F,GAAajH,EAASkH,MAChC,CAAC7F,EAAUrB,EAASkH,IAGnB,qCACI,cAAC,GAAD,IACElH,EAGE,cAAC,QAAD,CAAM2D,GAAG,IAAI1C,UAAU,gBAAvB,SACKf,EAAE,aAHP,cAAC,GAAD,IAMJ,6BAAKA,EAAE,qBACN7D,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,qCACI,cAACqI,GAAA,EAAD,UACK5I,EAASyB,KAAI,SAAChB,GAAD,OACV,cAACoI,GAAA,EAAD,CAAuBoD,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAjD,SACI,cAAC,GAAD,CAAS3L,QAASA,KADZA,EAAQ2I,UAK1B,cAAC,GAAD,CACI/I,MAAOA,EACPC,KAAMA,EACNwD,QAASA,GAAoB,Y,UCkPtCuI,GAlRO,SAAC,GAAwB,IAAtBN,EAAqB,EAArBA,MAAOnI,EAAc,EAAdA,QACpBI,EAAMC,eAAND,EADkC,EAGpBH,mBAAS,GAHW,oBAGnCyI,EAHmC,KAG9BC,EAH8B,OAId1I,mBAAS,GAJK,oBAInC+F,EAJmC,KAI3B4C,EAJ2B,OAKZ3I,mBAAS,IALG,oBAKnC4I,EALmC,KAK1BC,EAL0B,KAOpCvH,EAAWmB,cAGT1E,EADU+E,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,SAEFpB,EAAiBmG,aAAY,SAAC5G,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBM,EAAsB4F,aACxB,SAAC5G,GAAD,OAAWA,EAAMgB,uBAGR4L,EAGT5L,EAHAZ,QACOyM,EAEP7L,EAFAR,MACSsM,EACT9L,EADAH,QAGJgG,qBAAU,WACFiG,IACAL,EAAU,GACVE,EAAW,KAGVjM,EAAQ2I,KAAO3I,EAAQ2I,MAAQ2C,EAAMC,OAAOtG,KAC7CP,EAAS8F,GAAmBc,EAAMC,OAAOtG,KACzCP,EAAS,CAAEjF,KAAM/D,KAGrBgJ,EAAS8F,GAAmBc,EAAMC,OAAOtG,OAE1C,CAACP,EAAU4G,EAAOc,IAWrB,OACI,qCAEI,cAAC,QAAD,CAAM9H,UAAU,qBAAqB0C,GAAG,IAAxC,SACKzD,EAAE,aAEN7D,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,qCACI,cAAC,GAAD,CAAMiI,MAAO/H,EAAQiE,OACrB,eAACkE,GAAA,EAAD,WAEI,cAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,SAEI,cAACb,GAAA,EAAD,CACI/B,IAAK7I,EAAQ8I,MACb+B,IAAK7K,EAAQiE,KACb6G,OAAK,MAGb,cAAC1C,GAAA,EAAD,CAAKqD,GAAI,EAAT,SAEI,eAACY,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,UACI,cAAC6H,GAAA,EAAUrE,KAAX,UACI,6BAAKhI,EAAQiE,SAEjB,cAACoI,GAAA,EAAUrE,KAAX,UACI,cAAC,GAAD,CACI5D,MAAOpE,EAAQmJ,OACfb,KAAI,UAAKtI,EAAQoJ,WAAb,YAA2B7F,EAC3B,gBAIZ,eAAC8I,GAAA,EAAUrE,KAAX,WACKzE,EAAE,SADP,WAC0BvD,EAAQqJ,SAElC,eAACgD,GAAA,EAAUrE,KAAX,WACKzE,EAAE,eADP,KACyBvD,EAAQiL,oBAIzC,cAAC7C,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAAC/C,GAAA,EAAD,UACI,eAAC2D,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,UACI,cAAC6H,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAM7E,EAAE,SAAR,OACA,cAAC6E,GAAA,EAAD,UACI,4CACYpI,EAAQqJ,gBAMhC,cAACgD,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAM7E,EAAE,UAAR,OACA,cAAC6E,GAAA,EAAD,UACKpI,EAAQsM,aAAe,EAClB/I,EAAE,YACFA,EAAE,uBAKnBvD,EAAQsM,aAAe,GACpB,cAACD,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WAAM7E,EAAE,OAAR,OACA,cAAC6E,GAAA,EAAD,UACI,cAAC3E,GAAA,EAAKO,QAAN,CACIiF,GAAG,SACH7E,MAAOyH,EACP3H,SAAU,SAACP,GAAD,OACNmI,EACInI,EAAEQ,OAAOC,QALrB,SASK,YACM+F,MACCnK,EAAQsM,cACVlC,QACJpJ,KAAI,SAACD,GAAD,OACF,wBAEIqD,MAAOrD,EAAI,EAFf,SAIKA,EAAI,GAHAA,EAAI,eAYrC,cAACsL,GAAA,EAAUrE,KAAX,UACI,cAACzD,GAAA,EAAD,CACIkD,QAjHf,WACrBtE,EAAQW,KAAR,gBAAsBwH,EAAMC,OAAOtG,GAAnC,gBAA6C4G,KAiHTvH,UAAU,YACV7E,KAAK,SACL8M,SAC6B,IAAzBvM,EAAQsM,aALhB,SAQK/I,EAAE,6BAO3B,cAAC4E,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,UACI,6BAAKlI,EAAE,aACqB,IAA3BvD,EAAQC,QAAQuM,QACb,cAAC,GAAD,UAAUjJ,EAAE,gBAEhB,eAAC8I,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,UACKxE,EAAQC,QAAQe,KAAI,SAACyL,GAAD,OACjB,eAACJ,GAAA,EAAUrE,KAAX,WACI,iCAASyE,EAAOxI,OAChB,cAAC,GAAD,CAAQG,MAAOqI,EAAOtD,SACtB,4BACKsD,EAAOC,UAAUC,UAAU,EAAG,MAEnC,4BAAIF,EAAOT,YANMS,EAAO9D,QAShC,eAAC0D,GAAA,EAAUrE,KAAX,WACI,6BAAKzE,EAAE,oBACN6I,GACG,cAAC,GAAD,CAAS5H,QAAQ,UAAjB,SACKjB,EAAE,mCAGV2I,GAAwB,cAAC,GAAD,IACxBC,GACG,cAAC,GAAD,CAAS3H,QAAQ,SAAjB,SACK2H,IAGRhL,EACG,eAACsC,GAAA,EAAD,CAAMC,SA1JpB,SAACC,GJ+HQ,IAACiJ,EAAWH,EI9HvC9I,EAAEC,iBACFc,GJ6H4BkI,EI7HCtB,EAAMC,OAAOtG,GJ6HHwH,EI7HO,CAAEtD,SAAQ6C,WJ6H7B,yCAAuB,WACtDtH,EACAQ,GAFsD,sBAAAP,EAAA,sEAKlDD,EAAS,CACLjF,KAAMlE,IANwC,EAW9C2J,IADa/D,EAViC,EAU9CD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYlE,EAASmE,SAhBQ,SAoB5CC,KAAMsH,KAAN,wBAA4BD,EAA5B,YAAiDH,EAAQtH,GApBb,OAsBlDT,EAAS,CACLjF,KAAMjE,IAvBwC,gDA+BlC,kCALVkK,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMhE,EACNkE,QAAS+F,IArCqC,yDAAvB,2DI2BK,UACI,eAACjC,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UACKzJ,EAAE,YAEP,eAACE,GAAA,EAAKO,QAAN,CACIiF,GAAG,SACH7E,MAAO+E,EACPjF,SAAU,SAACP,GAAD,OACNoI,EACIpI,EAAEQ,OAAOC,QALrB,UASI,wBAAQA,MAAM,GAAd,SACKb,EAAE,YAEP,yBAAQa,MAAM,IAAd,iBACSb,EAAE,WAEX,yBAAQa,MAAM,IAAd,iBACSb,EAAE,WAEX,yBAAQa,MAAM,IAAd,iBACSb,EAAE,WAEX,yBAAQa,MAAM,IAAd,iBACSb,EAAE,gBAEX,yBAAQa,MAAM,IAAd,iBACSb,EAAE,sBAInB,eAACE,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UACKzJ,EAAE,aAEP,cAACE,GAAA,EAAKO,QAAN,CACIiF,GAAG,WACHgE,IAAI,IACJ7I,MAAO4H,EACP9H,SAAU,SAACP,GAAD,OACNsI,EACItI,EAAEQ,OAAOC,aAKzB,cAACG,GAAA,EAAD,CACIgI,SAAUL,EACVzM,KAAK,SACL+E,QAAQ,UAHZ,SAKKjB,EAAE,eAIX,eAAC,GAAD,WACI,cAAC,QAAD,CACIyD,GAAE,mCAA8BhH,EAAQ2I,KAD5C,SAGKpF,EAAE,aACC,IACPA,EAAE,0CCrRlC2J,GAAY,SAACjI,EAAI4G,GAAL,gDAAa,WAAOnH,EAAUQ,GAAjB,kBAAAP,EAAA,sEACXY,KAAMC,IAAN,wBAA2BP,IADhB,gBAC1BQ,EAD0B,EAC1BA,KAERf,EAAS,CACLjF,KAAM3D,EACN6D,QAAS,CACLK,QAASyF,EAAKkD,IACd1E,KAAMwB,EAAKxB,KACX6E,MAAOrD,EAAKqD,MACZO,MAAO5D,EAAK4D,MACZiD,aAAc7G,EAAK6G,aACnBT,SAIRvJ,aAAa6K,QACT,YACA3K,KAAK4K,UAAUlI,IAAW1E,KAAKC,YAjBD,2CAAb,yDCkJV4M,GAzII,SAAC,GAAkC,IAAhC/B,EAA+B,EAA/BA,MAAOxG,EAAwB,EAAxBA,SAAU3B,EAAc,EAAdA,QAC3BI,EAAMC,eAAND,EAEFqJ,EAAYtB,EAAMC,OAAOtG,GACzB4G,EAAM/G,EAASwI,OAASC,OAAOzI,EAASwI,OAAOE,MAAM,KAAK,IAAM,EAEhE9I,EAAWmB,cAGTpF,EADKyF,aAAY,SAAC5G,GAAD,OAAWA,EAAMkB,QAClCC,UAER0F,qBAAU,WACFyG,GACAlI,EAASwI,GAAUN,EAAWf,MAEnC,CAACnH,EAAUkI,EAAWf,IAUzB,OACI,eAAC1D,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,UACI,6BAAKlI,EAAE,mBACe,IAArB9C,EAAU+L,OACP,eAAC,GAAD,WACKjJ,EAAE,sBAAuB,IAC1B,cAAC,QAAD,CAAMyD,GAAG,IAAT,SAAczD,EAAE,gBAGpB,cAAC8I,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,SACK/D,EAAUO,KAAI,SAACJ,GAAD,OACX,cAACyL,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAACb,GAAA,EAAD,CACI/B,IAAKjI,EAAKkI,MACV+B,IAAKjK,EAAKqD,KACV6G,OAAK,EACL2C,SAAO,MAGf,cAACrF,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAAC,QAAD,CAAMzE,GAAE,mBAAcpG,EAAKZ,SAA3B,SACKY,EAAKqD,SAGd,eAACmE,GAAA,EAAD,CAAKqD,GAAI,EAAT,mBAAoB7K,EAAKyI,SACzB,cAACjB,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAAChI,GAAA,EAAKO,QAAN,CACIiF,GAAG,SACH7E,MAAOxD,EAAKiL,IACZ3H,SAAU,SAACP,GAAD,OACNe,EACIwI,GACItM,EAAKZ,QACLuN,OAAO5J,EAAEQ,OAAOC,UAPhC,SAYK,YACM+F,MACCvJ,EAAK0L,cACPlC,QACJpJ,KAAI,SAACD,GAAD,OACF,wBAEIqD,MAAOrD,EAAI,EAFf,SAIKA,EAAI,GAHAA,EAAI,UAQzB,cAACqH,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAAClH,GAAA,EAAD,CACIgD,MAAO,CAAEmG,UAAW,OACpBjO,KAAK,SACL+E,QAAQ,QACRiD,QAAS,kBACL/C,GD1EjBO,EC2EoCrE,EAAKZ,QD3E1C,yCAAQ,WAAO0E,EAAUQ,GAAjB,UAAAP,EAAA,sDAClCD,EAAS,CACLjF,KAAM1D,EACN4D,QAASsF,IAGb3C,aAAa6K,QACT,YACA3K,KAAK4K,UAAUlI,IAAW1E,KAAKC,YARD,2CAAR,8DAACwE,GCqES,SAUI,mBAAGX,UAAU,yBAtDT,wBA+DpC,cAAC8D,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAAC/C,GAAA,EAAD,UACI,eAAC2D,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,UACI,eAAC6H,GAAA,EAAUrE,KAAX,WACI,+BACKzE,EAAE,YADP,KAEK9C,EAAUkN,QACP,SAACC,EAAKhN,GAAN,OAAegN,EAAMhN,EAAKiL,MAC1B,GAJR,KAMOtI,EAAE,YAPb,SAUK9C,EACIkN,QACG,SAACC,EAAKhN,GAAN,OAAegN,EAAMhN,EAAKiL,IAAMjL,EAAKyI,QACrC,GAEHwE,QAAQ,MAEjB,cAACxB,GAAA,EAAUrE,KAAX,UACI,cAACzD,GAAA,EAAD,CACI9E,KAAK,SACL6E,UAAU,YACViI,SAA+B,IAArB9L,EAAU+L,OACpB/E,QAxGJ,WACpBtE,EAAQW,KAAK,6BAmGO,SAMKP,EAAE,sCChIpBuK,GAZO,SAAC,GAAkB,IAAhBvE,EAAe,EAAfA,SACrB,OACI,cAACxC,GAAA,EAAD,UACI,cAACoB,GAAA,EAAD,CAAK7D,UAAU,4BAAf,SACI,cAAC8D,GAAA,EAAD,CAAK2F,GAAI,GAAItC,GAAI,EAAjB,SACKlC,SC0ENyE,GAxEK,SAAC,GAA2B,IAAzBlJ,EAAwB,EAAxBA,SAAU3B,EAAc,EAAdA,QACrBI,EAAMC,eAAND,EADmC,EAGjBH,mBAAS,IAHQ,oBAGpC6K,EAHoC,KAG7BC,EAH6B,OAIX9K,mBAAS,IAJE,oBAIpC+K,EAJoC,KAI1BC,EAJ0B,KAKrC1J,EAAWmB,cAEX3E,EAAYgF,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCxB,EAA6BwB,EAA7BxB,QAASI,EAAoBoB,EAApBpB,MAAOqB,EAAaD,EAAbC,SAElBkN,EAAWvJ,EAASwI,OAASxI,EAASwI,OAAOE,MAAM,KAAK,GAAK,IAEnErH,qBAAU,WACFhF,GACAgC,EAAQW,KAAKuK,KAElB,CAAClL,EAAShC,EAAUkN,IAOvB,OACI,eAAC,GAAD,WACI,6BAAK9K,EAAE,aACNzD,GAAS,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC+D,GAAA,EAAD,CAAMC,SAVQ,SAACC,GACnBA,EAAEC,iBACFc,EhBGa,SAACuJ,EAAOE,GAAR,gDAAqB,WAAOzJ,GAAP,oBAAAC,EAAA,sEAElCD,EAAS,CACLjF,KAAMvD,IAGJiJ,EAAS,CACXC,QAAS,CACL,eAAgB,qBARU,SAYXG,KAAMsH,KACzB,mBACA,CAAEoB,QAAOE,YACThJ,GAf8B,gBAY1BM,EAZ0B,EAY1BA,KAMRf,EAAS,CACLjF,KAAMtD,EACNwD,QAAS8F,IAGbnD,aAAa6K,QAAQ,WAAY3K,KAAK4K,UAAU3H,IAvBd,kDAyBlCf,EAAS,CACLjF,KAAMrD,EACNuD,QACI,KAAMgG,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UA9Bc,0DAArB,sDgBHJ4I,CAAML,EAAOE,KAQlB,UACI,eAAC1K,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,mBACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,QACL4E,YAAad,EAAE,eACfa,MAAO6J,EACP/J,SAAU,SAACP,GAAD,OAAOuK,EAASvK,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,cACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,WACL4E,YAAad,EAAE,kBACfa,MAAO+J,EACPjK,SAAU,SAACP,GAAD,OAAOyK,EAAYzK,EAAEQ,OAAOC,aAI9C,cAACG,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,SACKjB,EAAE,gBAIX,cAAC4E,GAAA,EAAD,CAAK7D,UAAU,OAAf,SACI,eAAC8D,GAAA,EAAD,WACK7E,EAAE,iBAAkB,IACrB,cAAC,QAAD,CACIyD,GACIqH,EAAQ,6BACoBA,GACtB,YAJd,SAOK9K,EAAE,uBCgCZgL,GAhGQ,SAAC,GAA2B,IAAzBzJ,EAAwB,EAAxBA,SAAU3B,EAAc,EAAdA,QACxBI,EAAMC,eAAND,EADsC,EAGtBH,mBAAS,IAHa,oBAGvCa,EAHuC,KAGjCuK,EAHiC,OAIpBpL,mBAAS,IAJW,oBAIvC6K,EAJuC,KAIhCC,EAJgC,OAKd9K,mBAAS,IALK,oBAKvC+K,EALuC,KAK7BC,EAL6B,OAMAhL,mBAAS,IANT,oBAMvCqL,EANuC,KAMtBC,EANsB,OAOhBtL,mBAAS,MAPO,oBAOvCsC,EAPuC,KAO9BiJ,EAP8B,KAQxCjK,EAAWmB,cAEXzE,EAAe8E,aAAY,SAAC5G,GAAD,OAAWA,EAAM8B,gBAC1C1B,EAA6B0B,EAA7B1B,QAASI,EAAoBsB,EAApBtB,MAAOqB,EAAaC,EAAbD,SAElBkN,EAAWvJ,EAASwI,OAASxI,EAASwI,OAAOE,MAAM,KAAK,GAAK,IAEnErH,qBAAU,WACFhF,GACAgC,EAAQW,KAAKuK,KAElB,CAAClL,EAAShC,EAAUkN,IAWvB,OACI,eAAC,GAAD,WACI,6BAAK9K,EAAE,aACNmC,GAAW,cAAC,GAAD,CAASlB,QAAQ,SAAjB,SAA2BkB,IACtC5F,GAAS,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IACpCJ,GAAW,cAAC,GAAD,IACZ,eAAC+D,GAAA,EAAD,CAAMC,SAfQ,SAACC,GACnBA,EAAEC,iBACEuK,IAAaM,EACbE,EAAW,0BAEXjK,EjB+CY,SAACT,EAAMgK,EAAOE,GAAd,gDAA2B,WAAOzJ,GAAP,oBAAAC,EAAA,sEAE3CD,EAAS,CACLjF,KAAMnD,IAGJ6I,EAAS,CACXC,QAAS,CACL,eAAgB,qBARmB,SAYpBG,KAAMsH,KACzB,aACA,CAAE5I,OAAMgK,QAAOE,YACfhJ,GAfuC,gBAYnCM,EAZmC,EAYnCA,KAMRf,EAAS,CACLjF,KAAMlD,EACNoD,QAAS8F,IAGbf,EAAS,CACLjF,KAAMtD,EACNwD,QAAS8F,IAGbnD,aAAa6K,QAAQ,WAAY3K,KAAK4K,UAAU3H,IA5BL,kDA8B3Cf,EAAS,CACLjF,KAAMjD,EACNmD,QACI,KAAMgG,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAnCuB,0DAA3B,sDiB/CHkJ,CAAS3K,EAAMgK,EAAOE,KAU/B,UACI,eAAC1K,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,UACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAad,EAAE,cACfa,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO6K,EAAQ7K,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,mBACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,QACL4E,YAAad,EAAE,eACfa,MAAO6J,EACP/J,SAAU,SAACP,GAAD,OAAOuK,EAASvK,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,cACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,WACL4E,YAAad,EAAE,kBACfa,MAAO+J,EACPjK,SAAU,SAACP,GAAD,OAAOyK,EAAYzK,EAAEQ,OAAOC,aAI9C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,sBACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,WACL4E,YAAad,EAAE,oBACfa,MAAOqK,EACPvK,SAAU,SAACP,GAAD,OAAO+K,EAAmB/K,EAAEQ,OAAOC,aAIrD,cAACG,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,SACKjB,EAAE,iBAIX,cAAC4E,GAAA,EAAD,CAAK7D,UAAU,OAAf,SACI,eAAC8D,GAAA,EAAD,WACK7E,EAAE,oBAAqB,IACxB,cAAC,QAAD,CACIyD,GAAIqH,EAAQ,0BAAsBA,GAAa,SADnD,SAGK9K,EAAE,oB,UCmGZsL,GAvLO,SAAC,GAAiB,IAAf1L,EAAc,EAAdA,QACbI,EAAMC,eAAND,EAD2B,EAGXH,mBAAS,IAHE,oBAG5Ba,EAH4B,KAGtBuK,EAHsB,OAITpL,mBAAS,IAJA,oBAI5B6K,EAJ4B,KAIrBC,EAJqB,OAKH9K,mBAAS,IALN,oBAK5B+K,EAL4B,KAKlBC,EALkB,OAMWhL,mBAAS,IANpB,oBAM5BqL,EAN4B,KAMXC,EANW,OAOLtL,mBAAS,MAPJ,oBAO5BsC,EAP4B,KAOnBiJ,EAPmB,KAQ7BjK,EAAWmB,cAEXxE,EAAc6E,aAAY,SAAC5G,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAGhBH,EADU+E,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,SAGAhB,EADkB+F,aAAY,SAAC5G,GAAD,OAAWA,EAAMiC,qBAC/CpB,QAEF+B,EAAcgE,aAAY,SAAC5G,GAAD,OAAWA,EAAM4C,eAChC4M,EAA8C5M,EAAvDxC,QAA+BqP,EAAwB7M,EAA/BpC,MAAoBqC,EAAWD,EAAXC,OAEpDgE,qBAAU,WACDhF,EAGIG,GAASA,EAAK2C,OAAQ9D,GAKvBqO,EAAQlN,EAAK2C,MACbiK,EAAS5M,EAAK2M,SALdvJ,ElByKkB,yCAAM,WAAOA,GAAP,UAAAC,EAAA,sDACpCD,EAAS,CACLjF,KAAMzC,KAF0B,2CAAN,uDkBxKlB0H,EAASM,GAAe,YACxBN,ECsJY,yCAAM,WAAOA,EAAUQ,GAAjB,0BAAAP,EAAA,sEAE1BD,EAAS,CACLjF,KAAMlB,KAHgB,EAQtB2G,IADa/D,EAPS,EAOtBD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAZhB,SAgBHC,KAAMC,IAAN,uBAAkCL,GAhB/B,gBAgBlBM,EAhBkB,EAgBlBA,KAERf,EAAS,CACLjF,KAAMjB,GACNmB,QAAS8F,IApBa,kDA4BV,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMhB,GACNkB,QAAS+F,IAlCa,0DAAN,0DD3JhBvC,EAAQW,KAAK,YAWlB,CAACX,EAAShC,EAAUuD,EAAUpD,EAAMnB,IAavC,OACI,eAACgI,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,UACI,6BAAKlI,EAAE,kBACNmC,GAAW,cAAC,GAAD,CAASlB,QAAQ,SAAjB,SAA2BkB,IAEtCvF,GACG,cAAC,GAAD,CAASqE,QAAQ,UAAjB,SAA4BjB,EAAE,qBAEjC7D,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,eAAC2D,GAAA,EAAD,CAAMC,SAzBA,SAACC,GACnBA,EAAEC,iBACEuK,IAAaM,EACbE,EAAW,0BAEXjK,ElB2GqB,SAACpD,GAAD,gDAAU,WAAOoD,EAAUQ,GAAjB,0BAAAP,EAAA,sEAEnCD,EAAS,CACLjF,KAAM5C,IAHyB,EAQ/BqI,IADa/D,EAPkB,EAO/BD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYlE,EAASmE,SAbP,SAiBZC,KAAMyJ,IAAI,qBAAsB1N,EAAM6D,GAjB1B,gBAiB3BM,EAjB2B,EAiB3BA,KAERf,EAAS,CACLjF,KAAM3C,EACN6C,QAAS8F,IAGbf,EAAS,CACLjF,KAAMtD,EACNwD,QAAS8F,IAGbnD,aAAa6K,QAAQ,WAAY3K,KAAK4K,UAAU3H,IA7Bb,kDAoCnB,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAM1C,GACN4C,QAAS+F,IA1CsB,0DAAV,wDkB1GjBuJ,CAAkB,CAAEhK,GAAI3D,EAAKqH,IAAK1E,OAAMgK,QAAOE,eAmB3C,UACI,eAAC1K,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,UACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAad,EAAE,cACfa,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO6K,EAAQ7K,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,mBACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,QACL4E,YAAad,EAAE,eACfa,MAAO6J,EACP/J,SAAU,SAACP,GAAD,OAAOuK,EAASvK,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,cACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,WACL4E,YAAad,EAAE,kBACfa,MAAO+J,EACPjK,SAAU,SAACP,GAAD,OAAOyK,EAAYzK,EAAEQ,OAAOC,aAI9C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,sBACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,WACL4E,YAAad,EAAE,oBACfa,MAAOqK,EACPvK,SAAU,SAACP,GAAD,OACN+K,EAAmB/K,EAAEQ,OAAOC,aAKxC,cAACG,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,SACKjB,EAAE,kBAKnB,eAAC6E,GAAA,EAAD,CAAKqD,GAAI,EAAT,UACI,6BAAKlI,EAAE,eACNuL,EACG,cAAC,GAAD,IACAC,EACA,cAAC,GAAD,CAASvK,QAAQ,SAAjB,SAA2BuK,IAE3B,eAACG,GAAA,EAAD,CACIC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,YAAU,EACVhL,UAAU,WALd,UAOI,gCACI,+BACI,6BAAKf,EAAE,QACP,6BAAKA,EAAE,UACP,6BAAKA,EAAE,WACP,6BAAKA,EAAE,UACP,6BAAKA,EAAE,eACP,4BAGR,gCACKpB,EAAOnB,KAAI,SAACa,GAAD,OACR,+BACI,6BAAKA,EAAM8G,MACX,6BAAK9G,EAAM6K,UAAUC,UAAU,EAAG,MAClC,wCAAY9K,EAAM0N,cAClB,6BACK1N,EAAM2N,OACH3N,EAAM4N,OAAO9C,UAAU,EAAG,IAE1B,mBACIrI,UAAU,eACViD,MAAO,CAAEgB,MAAO,WAI5B,6BACK1G,EAAM6N,YACH7N,EAAM8N,YAAYhD,UAAU,EAAG,IAE/B,mBACIrI,UAAU,eACViD,MAAO,CAAEgB,MAAO,WAI5B,6BACI,cAAC,iBAAD,CACIvB,GAAE,iBAAYnF,EAAM8G,KADxB,SAGI,cAACpE,GAAA,EAAD,CACIC,QAAQ,OACRF,UAAU,SAFd,SAIKf,EAAE,mBAhCV1B,EAAM8G,oBE5GhCiH,GAtCO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC3BxM,EAAMC,eAAND,EAER,OACI,eAACqE,GAAA,EAAD,CAAKtD,UAAU,8BAAf,UACI,cAACsD,GAAA,EAAII,KAAL,UACK6H,EACG,cAAC,iBAAD,CAAe7I,GAAG,SAAlB,SACI,cAACY,GAAA,EAAIC,KAAL,UAAWtE,EAAE,eAGjB,cAACqE,GAAA,EAAIC,KAAL,CAAU0E,UAAQ,EAAlB,SAAoBhJ,EAAE,eAI9B,cAACqE,GAAA,EAAII,KAAL,UACK8H,EACG,cAAC,iBAAD,CAAe9I,GAAG,YAAlB,SACI,cAACY,GAAA,EAAIC,KAAL,UAAWtE,EAAE,gBAGjB,cAACqE,GAAA,EAAIC,KAAL,CAAU0E,UAAQ,EAAlB,SAAoBhJ,EAAE,gBAI9B,cAACqE,GAAA,EAAII,KAAL,UACK+H,EACG,cAAC,iBAAD,CAAe/I,GAAG,cAAlB,SACI,cAACY,GAAA,EAAIC,KAAL,UAAWtE,EAAE,mBAGjB,cAACqE,GAAA,EAAIC,KAAL,CAAU0E,UAAQ,EAAlB,SAAoBhJ,EAAE,uBCqE3ByM,GAjGQ,SAAC,GAAiB,IAAf7M,EAAc,EAAdA,QACdI,EAAMC,eAAND,EACFmB,EAAWmB,cAGTnF,EADKwF,aAAY,SAAC5G,GAAD,OAAWA,EAAMkB,QAClCE,gBAGAS,EADU+E,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,SAR4B,EAUNiC,mBAAS1C,EAAgBuP,SAVnB,oBAU7BA,EAV6B,KAUpBC,EAVoB,OAWZ9M,mBAAS1C,EAAgByP,MAXb,oBAW7BA,EAX6B,KAWvBC,EAXuB,OAYAhN,mBAAS,SAZT,oBAY7BiN,EAZ6B,KAYjBC,EAZiB,OAaElN,mBAAS1C,EAAgB6P,aAb3B,oBAa7BA,EAb6B,KAahBC,EAbgB,KA6BpC,OANArK,qBAAU,WACDhF,GACDgC,EAAQW,KAAK,OAElB,CAAC3C,EAAUgC,IAGV,eAAC,GAAD,WACI,cAAC,GAAD,CAAe0M,OAAK,EAACC,OAAK,IAC1B,6BAAKvM,EAAE,cACP,eAACE,GAAA,EAAD,CAAMC,SAlBQ,SAACC,GRiBQ,IAAC8B,EQhB5B9B,EAAEC,iBACFc,GRe4Be,EQdJ,CAAEwK,UAASE,OAAME,aAAYE,eRc1B,yCAAU,WAAO7L,GAAP,UAAAC,EAAA,sDACzCD,EAAS,CACLjF,KAAMzD,EACN2D,QAAS8F,IAGbnD,aAAa6K,QAAQ,kBAAmB3K,KAAK4K,UAAU3H,IANd,2CAAV,wDQZ3BtC,EAAQW,KAAK,gBAaT,UACI,eAACL,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,aACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAad,EAAE,iBACfa,MAAO6L,EACPQ,UAAQ,EACRvM,SAAU,SAACP,GAAD,OAAOuM,EAAWvM,EAAEQ,OAAOC,aAI7C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,kBACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAad,EAAE,sBACfa,MAAOmM,EACPE,UAAQ,EACRvM,SAAU,SAACP,GAAD,OAAO6M,EAAe7M,EAAEQ,OAAOC,aAIjD,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,UACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAad,EAAE,cACfa,MAAO+L,EACPM,UAAQ,EACRvM,SAAU,SAACP,GAAD,OAAOyM,EAAQzM,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,UAAazJ,EAAE,iBACf,cAACE,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAad,EAAE,qBACfa,MAAOiM,EACPI,UAAQ,EACRvM,SAAU,SAACP,GAAD,OAAO2M,EAAc3M,EAAEQ,OAAOC,aAehD,cAACG,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,SACKjB,EAAE,qBCgFRmN,GAvKU,SAAC,GAAiB,IAAfvN,EAAc,EAAdA,QAChBI,EAAMC,eAAND,EAEFmB,EAAWmB,cAEXrF,EAAO0F,aAAY,SAAC5G,GAAD,OAAWA,EAAMkB,QAEpCU,EAAYgF,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,EAAaD,EAAbC,SAEHX,EAAKE,gBAAgBuP,SACtB9M,EAAQW,KAAK,aAIjB,IAAqB6M,EAErBnQ,EAAKoQ,YAFgBD,EAGjBnQ,EAAKC,UAAUkN,QAAO,SAACC,EAAKhN,GAAN,OAAegN,EAAMhN,EAAKiL,IAAMjL,EAAKyI,QAAO,IAHxCwH,KAAKC,MAAY,IAANH,GAAa,KAAK9C,QAAQ,IAKnErN,EAAKuQ,cAAgB,GACrBvQ,EAAK+O,YACDhC,OAAO/M,EAAKoQ,YAAcrD,OAAO/M,EAAKuQ,gBACxClD,QAAQ,GAEV,IAAMjM,EAAcsE,aAAY,SAAC5G,GAAD,OAAWA,EAAMsC,eACzCC,EAA0BD,EAA1BC,MAAO1B,EAAmByB,EAAnBzB,QAASL,EAAU8B,EAAV9B,MAExBqG,qBAAU,WACDhF,GACDgC,EAAQW,KAAK,KAGb3D,IACAgD,EAAQW,KAAR,iBAAuBjC,EAAM8G,MAC7BjE,EAAS,CAAEjF,KAAM7C,IACjB8H,EAAS,CAAEjF,KAAM1B,QAGtB,CAACoF,EAAShD,EAASe,IActB,OACI,qCACI,cAAC,GAAD,CAAe2O,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,eAAC5H,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,eAACY,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,UACI,eAAC6H,GAAA,EAAUrE,KAAX,WACI,6BAAKzE,EAAE,cACP,8BACI,mCAASA,EAAE,WAAX,QACA,uBAAMgE,MAAO,CAAEyJ,UAAW,OAA1B,UACKxQ,EAAKE,gBAAgBuP,QAD1B,IACoC,IAC/BzP,EAAKE,gBAAgByP,KAF1B,IAEiC,IAC5B3P,EAAKE,gBAAgB2P,WAH1B,IAGuC,UAG3C,8BACI,mCAAS9M,EAAE,gBAAX,QACA,sBAAMgE,MAAO,CAAEyJ,UAAW,OAA1B,SACKxQ,EAAKE,gBAAgB6P,oBAKlC,eAAClE,GAAA,EAAUrE,KAAX,WACI,6BAAKzE,EAAE,iBACoB,IAA1B/C,EAAKC,UAAU+L,OACZ,cAAC,GAAD,UAAUjJ,EAAE,wBAEZ,cAAC8I,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,SACKhE,EAAKC,UAAUO,KAAI,SAACJ,EAAMqQ,GAAP,OAChB,cAAC5E,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAACb,GAAA,EAAD,CACI/B,IAAKjI,EAAKkI,MACV+B,IAAKjK,EAAKqD,KACV6G,OAAK,EACL2C,SAAO,MAGf,cAACrF,GAAA,EAAD,UACI,cAAC,QAAD,CACIpB,GAAE,mBAAcpG,EAAKZ,SADzB,SAGKY,EAAKqD,SAGd,eAACmE,GAAA,EAAD,CACIqD,GAAI,EACJlE,MAAO,CAAEyJ,UAAW,OAFxB,UAIKpQ,EAAKiL,IAJV,YAKKjL,EAAKyI,MALV,aAOQzI,EAAKiL,IAAMjL,EAAKyI,OAClBwE,QAAQ,UAzBDoD,gBAoC7C,cAAC7I,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAAC/C,GAAA,EAAD,UACI,eAAC2D,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,UACI,cAAC6H,GAAA,EAAUrE,KAAX,UACI,6BAAKzE,EAAE,qBAEX,cAAC8I,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAM7E,EAAE,WACR,eAAC6E,GAAA,EAAD,oBAAa5H,EAAKoQ,mBAG1B,cAACvE,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAM7E,EAAE,cACR,eAAC6E,GAAA,EAAD,oBAAa5H,EAAKuQ,sBAG1B,cAAC1E,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAM7E,EAAE,WACR,eAAC6E,GAAA,EAAD,oBAAa5H,EAAK+O,mBAGzBzP,GACG,cAACuM,GAAA,EAAUrE,KAAX,UACI,cAAC,GAAD,CAASxD,QAAQ,SAAjB,SAA2B1E,MAGnC,cAACuM,GAAA,EAAUrE,KAAX,UACI,cAACzD,GAAA,EAAD,CACI9E,KAAK,SACL6E,UAAU,YACViI,SAAoC,IAA1B/L,EAAKC,UAAU+L,OACzB/E,QAjHN,WACtB/C,EH7BmB,SAAC7C,GAAD,gDAAW,WAAO6C,EAAUQ,GAAjB,0BAAAP,EAAA,sEAE9BD,EAAS,CACLjF,KAAM7B,KAHoB,EAQ1BsH,IADa/D,EAPa,EAO1BD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYlE,EAASmE,SAbZ,SAiBPC,KAAMsH,KAAK,cAAehL,EAAOsD,GAjB1B,gBAiBtBM,EAjBsB,EAiBtBA,KAERf,EAAS,CACLjF,KAAM5B,GACN8B,QAAS8F,IAGbf,EAAS,CAAEjF,KAAMxD,IACjBqG,aAAasC,WAAW,aAzBM,kDAgCd,kCALVc,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAM3B,GACN6B,QAAS+F,IAtCiB,0DAAX,wDG8BfwL,CAAY,CACRnP,WAAYvB,EAAKC,UACjBC,gBAAiBF,EAAKE,gBACtBkQ,WAAYpQ,EAAKoQ,WACjBG,cAAevQ,EAAKuQ,cACpBxB,WAAY/O,EAAK+O,eAsGD,SAMKhM,EAAE,iCC0DxB4N,GAhNK,SAAC,GAAwB,IAAtBhO,EAAqB,EAArBA,QAASmI,EAAY,EAAZA,MACpB/H,EAAMC,eAAND,EACFmB,EAAWmB,cAEXuL,EAAU9F,EAAMC,OAAOtG,GAEvBnD,EAAeoE,aAAY,SAAC5G,GAAD,OAAWA,EAAMwC,gBAC1CD,EAA0BC,EAA1BD,MAAOnC,EAAmBoC,EAAnBpC,QAASI,EAAUgC,EAAVhC,MAElBkC,EAAWkE,aAAY,SAAC5G,GAAD,OAAWA,EAAM0C,YAC7BqP,EAAoCrP,EAA7CtC,QAA8B4R,EAAetP,EAAxB7B,QAEvB8B,EAAeiE,aAAY,SAAC5G,GAAD,OAAWA,EAAM2C,gBACjCsP,EAA4CtP,EAArDvC,QAAkC8R,EAAmBvP,EAA5B9B,QAGzBgB,EADU+E,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,SAERgF,qBAAU,WJgCiB,IAAClB,EI/BnB9D,GACDgC,EAAQW,KAAK,YAGZjC,GAASyP,GAAcE,GAAkB3P,EAAM8G,MAAQyI,KACxD1M,EAAS,CAAEjF,KAAMnB,KACjBoG,EAAS,CAAEjF,KAAMP,KACjBwF,GJwBoBO,EIxBKmM,EJwBN,yCAAQ,WAAO1M,EAAUQ,GAAjB,0BAAAP,EAAA,sEAE/BD,EAAS,CACLjF,KAAMzB,KAHqB,EAQ3BkH,IADa/D,EAPc,EAO3BD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAZX,SAgBRC,KAAMC,IAAN,sBAAyBP,GAAME,GAhBvB,gBAgBvBM,EAhBuB,EAgBvBA,KAERf,EAAS,CACLjF,KAAMxB,GACN0B,QAAS8F,IApBkB,kDA4Bf,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMvB,GACNyB,QAAS+F,IAlCkB,0DAAR,6DItBxB,CACChB,EACA7C,EACAuP,EACAE,EACAnO,EACAhC,EACAqQ,IAWJ,OAAO9R,EACH,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,qCACI,cAAC,QAAD,CAAMkH,GAAG,mBAAmB1C,UAAU,oBAAtC,SACKf,EAAE,aAEP,qBAAIgE,MAAO,CAAEyJ,UAAW,OAAxB,UACKzN,EAAE,SADP,MACoB1B,EAAM8G,OAE1B,eAACR,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,eAACY,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,UACI,eAAC6H,GAAA,EAAUrE,KAAX,WACI,6BAAKzE,EAAE,cACP,8BACI,mCAASA,EAAE,QAAX,QADJ,IACoC1B,EAAMP,KAAK2C,QAE/C,8BACI,mCAASV,EAAE,SAAX,QACA,mBAAGwB,KAAI,iBAAYlD,EAAMP,KAAK2M,OAA9B,SACKpM,EAAMP,KAAK2M,WAGpB,8BACI,mCAAS1K,EAAE,WAAX,QACC1B,EAAMnB,gBAAgBuP,QAF3B,IAEqC,IAChCpO,EAAMnB,gBAAgByP,KAH3B,IAGkC,IAC7BtO,EAAMnB,gBAAgB2P,WAJ3B,IAIwC,IACnCxO,EAAMnB,gBAAgB+Q,WAE3B,8BACI,mCAASlO,EAAE,gBAAX,QACA,sBAAMgE,MAAO,CAAEyJ,UAAW,OAA1B,SACKnP,EAAMnB,gBAAgB6P,iBAI9B1O,EAAM6N,YACH,eAAC,GAAD,CAASlL,QAAQ,UAAjB,UACKjB,EAAE,gBADP,MAC2B1B,EAAM8N,eAGjC,cAAC,GAAD,CAASnL,QAAQ,SAAjB,SACKjB,EAAE,mBAIV1B,EAAM2N,OACH,eAAC,GAAD,CAAShL,QAAQ,UAAjB,UACKjB,EAAE,WADP,MACsB1B,EAAM4N,UAG5B,cAAC,GAAD,CAASjL,QAAQ,SAAjB,SACKjB,EAAE,iBAKf,eAAC8I,GAAA,EAAUrE,KAAX,WACI,6BAAKzE,EAAE,iBACsB,IAA5B1B,EAAME,WAAWyK,OACd,cAAC,GAAD,UAAUjJ,EAAE,oBAEZ,cAAC8I,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,SACK3C,EAAME,WAAWf,KAAI,SAACJ,EAAMqQ,GAAP,OAClB,cAAC5E,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAACb,GAAA,EAAD,CACI/B,IAAKjI,EAAKkI,MACV+B,IAAKjK,EAAKqD,KACV6G,OAAK,EACL2C,SAAO,MAGf,cAACrF,GAAA,EAAD,UACI,cAAC,QAAD,CACIpB,GAAE,mBAAcpG,EAAKZ,SADzB,SAGKY,EAAKqD,SAGd,eAACmE,GAAA,EAAD,CACIqD,GAAI,EACJlE,MAAO,CAAEyJ,UAAW,OAFxB,UAIKpQ,EAAKiL,IAJV,YAKKjL,EAAKyI,MALV,YAMKzI,EAAKiL,IAAMjL,EAAKyI,aAvBR4H,gBAkC7C,cAAC7I,GAAA,EAAD,CAAKqD,GAAI,EAAT,SACI,cAAC/C,GAAA,EAAD,UACI,eAAC2D,GAAA,EAAD,CAAW7H,QAAQ,QAAnB,UACI,cAAC6H,GAAA,EAAUrE,KAAX,UACI,6BAAKzE,EAAE,qBAEX,cAAC8I,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAM7E,EAAE,WACR,eAAC6E,GAAA,EAAD,oBAAavG,EAAM+O,mBAG3B,cAACvE,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAM7E,EAAE,cACR,eAAC6E,GAAA,EAAD,oBAAavG,EAAMkP,sBAG3B,cAAC1E,GAAA,EAAUrE,KAAX,UACI,eAACG,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAM7E,EAAE,WACR,eAAC6E,GAAA,EAAD,oBAAavG,EAAM0N,mBAI1B8B,GAAc,cAAC,GAAD,IACdlQ,GAAYA,EAAS8G,UAAYpG,EAAM2N,QACpC,cAACnD,GAAA,EAAUrE,KAAX,UACI,cAACzD,GAAA,EAAD,CACI9E,KAAK,SACL6E,UAAU,gBACVmD,QA7IjB,WACf/C,EJkDgB,SAAC0M,GAAD,gDAAa,WAAO1M,EAAUQ,GAAjB,0BAAAP,EAAA,sEAE7BD,EAAS,CACLjF,KAAMtB,KAHmB,EAQzB+G,IADa/D,EAPY,EAOzBD,UAAaC,SAGXgE,EAAS,CACX,eAAgB,mBAChBC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAbb,SAiBNC,KAAMyJ,IAAN,sBACJoC,EADI,QAEnB,GACAjM,GApByB,gBAiBrBM,EAjBqB,EAiBrBA,KAMRf,EAAS,CACLjF,KAAMrB,GACNuB,QAAS8F,IAzBgB,kDAiCb,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMpB,GACNsB,QAAS+F,IAvCgB,0DAAb,wDIlDPgM,CAASN,KAyIU,4BAUPG,GAAkB,cAAC,GAAD,IAClBpQ,GACGA,EAAS8G,UACRpG,EAAM6N,aACH,cAACrD,GAAA,EAAUrE,KAAX,UACI,cAACzD,GAAA,EAAD,CACI9E,KAAK,SACL6E,UAAU,gBACVmD,QAxJjB,WACnB/C,EJ0FoB,SAAC7C,GAAD,gDAAW,WAAO6C,EAAUQ,GAAjB,0BAAAP,EAAA,sEAE/BD,EAAS,CACLjF,KAAMV,KAHqB,EAQ3BmG,IADa/D,EAPc,EAO3BD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAZX,SAgBRC,KAAMyJ,IAAN,sBACJnN,EAAM8G,IADF,YAEnB,GACAxD,GAnB2B,gBAgBvBM,EAhBuB,EAgBvBA,KAMRf,EAAS,CACLjF,KAAMT,GACNW,QAAS8F,IAxBkB,kDAgCf,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMR,GACNU,QAAS+F,IAtCkB,0DAAX,wDI1FXiM,CAAa9P,KAoJU,+CCzGzB+P,GA/FQ,SAAC,GAAiB,IAAfzO,EAAc,EAAdA,QAChBuB,EAAWmB,cAEXrE,EAAW0E,aAAY,SAAC5G,GAAD,OAAWA,EAAMkC,YACtC9B,EAA0B8B,EAA1B9B,QAASI,EAAiB0B,EAAjB1B,MAAO2B,EAAUD,EAAVC,MAGPoQ,EADE3L,aAAY,SAAC5G,GAAD,OAAWA,EAAMoC,cACxCvB,QAGAgB,EADU+E,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,SAERgF,qBAAU,WACFhF,GAAYA,EAAS8G,QACrBvD,ExBkMa,yCAAM,WAAOA,EAAUQ,GAAjB,0BAAAP,EAAA,sEAEvBD,EAAS,CACLjF,KAAMxC,KAHa,EAQnBiI,IADa/D,EAPM,EAOnBD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAZnB,SAgBAC,KAAMC,IAAI,aAAcL,GAhBxB,gBAgBfM,EAhBe,EAgBfA,KAERf,EAAS,CACLjF,KAAMvC,GACNyC,QAAS8F,IApBU,kDA4BP,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMtC,GACNwC,QAAS+F,IAlCU,0DAAN,yDwBhMbvC,EAAQW,KAAK,YAElB,CAACY,EAAUvB,EAAShC,EAAU0Q,IAEjC,IAAMC,EAAgB,SAAC7M,GACf8M,OAAOC,QAAQ,kBACftN,ExBiOc,SAACO,GAAD,gDAAQ,WAAOP,EAAUQ,GAAjB,sBAAAP,EAAA,sEAE1BD,EAAS,CACLjF,KAAMpC,KAHgB,EAQtB6H,IADa/D,EAPS,EAOtBD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAZhB,SAgBpBC,KAAM0M,OAAN,qBAA2BhN,GAAME,GAhBb,OAkB1BT,EAAS,CACLjF,KAAMnC,KAnBgB,gDA2BV,kCALVoI,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMlC,GACNoC,QAAS+F,IAjCa,yDAAR,wDwBjOLwM,CAAWjN,KAI5B,OACI,qCACI,uCACCvF,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,eAACoP,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChL,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,uCACA,4BAGR,gCACK7C,EAAMT,KAAI,SAACM,GAAD,OACP,+BACI,6BAAKA,EAAKqH,MACV,6BAAKrH,EAAK2C,OACV,6BACI,mBAAGc,KAAI,iBAAYzD,EAAK2M,OAAxB,SACK3M,EAAK2M,UAGd,6BACK3M,EAAK2G,QACF,mBACI3D,UAAU,eACViD,MAAO,CAAEgB,MAAO,WAGpB,mBACIjE,UAAU,eACViD,MAAO,CAAEgB,MAAO,WAI5B,+BACI,cAAC,iBAAD,CACIvB,GAAE,sBAAiB1F,EAAKqH,IAAtB,SADN,SAGI,cAACpE,GAAA,EAAD,CACIC,QAAQ,QACRF,UAAU,SAFd,SAII,mBAAGA,UAAU,oBAGrB,cAACC,GAAA,EAAD,CACIC,QAAQ,SACRF,UAAU,SACVmD,QAAS,kBAAMqK,EAAcxQ,EAAKqH,MAHtC,SAKI,mBAAGrE,UAAU,wBArChBhD,EAAKqH,iBCmD3BwJ,GA/FQ,SAAC,GAAwB,IAAtB7G,EAAqB,EAArBA,MAAOnI,EAAc,EAAdA,QACvBiP,EAAS9G,EAAMC,OAAOtG,GADe,EAGnB7B,mBAAS,IAHU,oBAGpCa,EAHoC,KAG9BuK,EAH8B,OAIjBpL,mBAAS,IAJQ,oBAIpC6K,EAJoC,KAI7BC,EAJ6B,OAKb9K,oBAAS,GALI,oBAKpC6E,EALoC,KAK3BoK,EAL2B,KAOrC3N,EAAWmB,cAEXxE,EAAc6E,aAAY,SAAC5G,GAAD,OAAWA,EAAM+B,eACzC3B,EAAyB2B,EAAzB3B,QAASI,EAAgBuB,EAAhBvB,MAAOwB,EAASD,EAATC,KAElBK,EAAauE,aAAY,SAAC5G,GAAD,OAAWA,EAAMqC,cAEnC2Q,EAGT3Q,EAHAjC,QACO6S,EAEP5Q,EAFA7B,MACS0S,EACT7Q,EADAxB,QAGJgG,qBAAU,WACFqM,GACA9N,EAAS,CAAEjF,KAAM9B,KACjBwF,EAAQW,KAAK,oBAERxC,EAAK2C,MAAQ3C,EAAKqH,MAAQyJ,GAG3B5D,EAAQlN,EAAK2C,MACbiK,EAAS5M,EAAK2M,OACdoE,EAAW/Q,EAAK2G,UAJhBvD,EAASM,GAAeoN,MAOjC,CAAC1N,EAAUpD,EAAM8Q,EAAQI,EAAerP,IAO3C,OACI,qCACI,cAAC,QAAD,CAAM6D,GAAG,kBAAkB1C,UAAU,oBAArC,qBAGA,eAAC,GAAD,WACI,2CACCgO,GAAiB,cAAC,GAAD,IACjBC,GACG,cAAC,GAAD,CAAS/N,QAAQ,SAAjB,SAA2B+N,IAE9B7S,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,eAAC2D,GAAA,EAAD,CAAMC,SArBA,SAACC,GACnBA,EAAEC,iBACFc,EzBuPkB,SAACpD,GAAD,gDAAU,WAAOoD,EAAUQ,GAAjB,0BAAAP,EAAA,sEAE5BD,EAAS,CACLjF,KAAMjC,KAHkB,EAQxB0H,IADa/D,EAPW,EAOxBD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYlE,EAASmE,SAbd,SAiBLC,KAAMyJ,IAAN,qBACL1N,EAAKqH,KACnBrH,EACA6D,GApBwB,gBAiBpBM,EAjBoB,EAiBpBA,KAMRf,EAAS,CACLjF,KAAMhC,KAGViH,EAAS,CACLjF,KAAM/C,EACNiD,QAAS8F,IAGbf,EAAS,CAAEjF,KAAM7C,IAhCW,kDAuCZ,kCALV8I,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAM/B,GACNiC,QAAS+F,IA7Ce,0DAAV,wDyBvPT+M,CAAW,CAAE9J,IAAKyJ,EAAQnO,OAAMgK,QAAOhG,cAmBpC,UACI,eAACxE,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,mBACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO6K,EAAQ7K,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,4BACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,QACL4E,YAAY,cACZD,MAAO6J,EACP/J,SAAU,SAACP,GAAD,OAAOuK,EAASvK,EAAEQ,OAAOC,aAI3C,cAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACtJ,GAAA,EAAKiP,MAAN,CACIjT,KAAK,WACLkT,MAAM,WACNC,QAAS3K,EACT/D,SAAU,SAACP,GAAD,OAAO0O,EAAW1O,EAAEQ,OAAOyO,cAI7C,cAACrO,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,8BC4DTqO,GA7IW,SAAC,GAAwB,IAAtB1P,EAAqB,EAArBA,QACnBoH,EADwC,EAAZe,MACTC,OAAOhB,YAAc,EAExC7F,EAAWmB,cAEXxG,EAAc6G,aAAY,SAAC5G,GAAD,OAAWA,EAAMD,eACzCK,EAA0CL,EAA1CK,QAASI,EAAiCT,EAAjCS,MAAOP,EAA0BF,EAA1BE,SAAUK,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KAGjCsB,EADU+E,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,SAEFjB,EAAgBgG,aAAY,SAAC5G,GAAD,OAAWA,EAAMY,iBAEtC4S,EAGT5S,EAHAR,QACOqT,EAEP7S,EAFAJ,MACS+R,EACT3R,EADAC,QAGEC,EAAgB8F,aAAY,SAAC5G,GAAD,OAAWA,EAAMc,iBAEtC4S,EAIT5S,EAJAV,QACOuT,EAGP7S,EAHAN,MACSoT,EAET9S,EAFAD,QACSgT,EACT/S,EADAJ,QAGJmG,qBAAU,WACNzB,EAAS,CAAEjF,KAAMvE,IAEZiG,EAAS8G,SACV9E,EAAQW,KAAK,UAGboP,EACA/P,EAAQW,KAAR,yBAA+BqP,EAAexK,IAA9C,UAEAjE,EAAS4F,GAAa,GAAIC,MAE/B,CACC7F,EACAvB,EACAhC,EACA0Q,EACAqB,EACAC,EACA5I,IAGJ,IAAMuH,EAAgB,SAAC7M,GACf8M,OAAOC,QAAQ,kBACftN,ElBEiB,SAACO,GAAD,gDAAQ,WAAOP,EAAUQ,GAAjB,sBAAAP,EAAA,sEAE7BD,EAAS,CACLjF,KAAM7E,IAHmB,EAQzBsK,IADa/D,EAPY,EAOzBD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAZb,SAgBvBC,KAAM0M,OAAN,wBAA8BhN,GAAME,GAhBb,OAkB7BT,EAAS,CACLjF,KAAM5E,IAnBmB,gDA2Bb,kCALV6K,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAM3E,EACN6E,QAAS+F,IAjCgB,yDAAR,wDkBFR0N,CAAcnO,KAI/B,OACI,qCACI,eAACkD,GAAA,EAAD,CAAK7D,UAAU,qBAAf,UACI,cAAC8D,GAAA,EAAD,UACI,4CAEJ,cAACA,GAAA,EAAD,CAAK9D,UAAU,aAAf,SACI,eAACC,GAAA,EAAD,CACID,UAAU,OACVmD,QAAS,kBAAM/C,ElB2BV,yCAAM,WAAOA,EAAUQ,GAAjB,0BAAAP,EAAA,sEAE3BD,EAAS,CACLjF,KAAM1E,IAHiB,EAQvBmK,IADa/D,EAPU,EAOvBD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAZf,SAiBJC,KAAMsH,KAAN,gBAA4B,GAAI1H,GAjB5B,gBAiBnBM,EAjBmB,EAiBnBA,KAERf,EAAS,CACLjF,KAAMzE,EACN2E,QAAS8F,IArBc,kDA6BX,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMxE,EACN0E,QAAS+F,IAnCc,0DAAN,0DkB7BT,UAII,mBAAGpB,UAAU,gBAJjB,yBAQP0O,EACG,cAAC,GAAD,IAEAC,GAAe,cAAC,GAAD,CAASzO,QAAQ,SAAjB,SAA2ByO,IAE7CH,EACG,cAAC,GAAD,IACAC,EACA,cAAC,GAAD,CAASvO,QAAQ,SAAjB,SAA2BuO,IAC3BrT,EACA,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,qCACI,eAACoP,GAAA,EAAD,CACIC,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLC,YAAU,EACVhL,UAAU,WALd,UAOI,gCACI,+BACI,oCACA,sCACA,uCACA,0CACA,uCACA,4BAGR,gCACK/E,EAASyB,KAAI,SAAChB,GAAD,OACV,+BACI,6BAAKA,EAAQ2I,MACb,6BAAK3I,EAAQiE,OACb,wCAAYjE,EAAQqJ,SACpB,6BAAKrJ,EAAQqT,WACb,6BAAKrT,EAAQsT,QACb,+BACI,cAAC,iBAAD,CACItM,GAAE,yBAAoBhH,EAAQ2I,IAA5B,SADN,SAGI,cAACpE,GAAA,EAAD,CACIC,QAAQ,QACRF,UAAU,SAFd,SAII,mBAAGA,UAAU,oBAGrB,cAACC,GAAA,EAAD,CACIC,QAAQ,SACRF,UAAU,SACVmD,QAAS,kBACLqK,EAAc9R,EAAQ2I,MAJ9B,SAOI,mBAAGrE,UAAU,wBAxBhBtE,EAAQ2I,aA+B7B,cAAC,GAAD,CAAU/I,MAAOA,EAAOC,KAAMA,EAAMoI,SAAS,WCqDlDsL,GA9LW,SAAC,GAAwB,IAAtBjI,EAAqB,EAArBA,MAAOnI,EAAc,EAAdA,QAC1ByJ,EAAYtB,EAAMC,OAAOtG,GADe,EAGtB7B,mBAAS,IAHa,oBAGvCa,EAHuC,KAGjCuK,EAHiC,OAIpBpL,mBAAS,GAJW,oBAIvCiG,EAJuC,KAIhCmK,EAJgC,OAKpBpQ,mBAAS,IALW,oBAKvC0F,EALuC,KAKhC2K,EALgC,OAMpBrQ,mBAAS,IANW,oBAMvCkQ,EANuC,KAMhCI,EANgC,OAOdtQ,mBAAS,IAPK,oBAOvCiQ,EAPuC,KAO7BM,EAP6B,OAQNvQ,mBAAS,GARH,oBAQvCkJ,EARuC,KAQzBsH,EARyB,OASRxQ,mBAAS,IATD,oBASvC6H,EATuC,KAS1B4I,EAT0B,OAUZzQ,oBAAS,GAVG,oBAUvC0Q,EAVuC,KAU5BC,EAV4B,KAYxCrP,EAAWmB,cAEX9F,EAAiBmG,aAAY,SAAC5G,GAAD,OAAWA,EAAMS,kBAC5CL,EAA4BK,EAA5BL,QAASI,EAAmBC,EAAnBD,MAAOE,EAAYD,EAAZC,QAElBK,EAAgB6F,aAAY,SAAC5G,GAAD,OAAWA,EAAMe,iBAEtCiS,EAGTjS,EAHAX,QACO6S,EAEPlS,EAFAP,MACS0S,EACTnS,EADAF,QAGJgG,qBAAU,WACFqM,GACA9N,EAAS,CAAEjF,KAAMnE,IACjB6H,EAAQW,KAAK,uBAER9D,EAAQiE,MAAQjE,EAAQ2I,MAAQiE,GAGjC4B,EAAQxO,EAAQiE,MAChBuP,EAASxT,EAAQqJ,OACjBoK,EAASzT,EAAQ8I,OACjB4K,EAAS1T,EAAQsT,OACjBK,EAAY3T,EAAQqT,UACpBO,EAAgB5T,EAAQsM,cACxBuH,EAAe7T,EAAQiL,cARvBvG,EAAS8F,GAAmBoC,MAWrC,CAAClI,EAAU1E,EAAS4M,EAAWzJ,EAASqP,IAE3C,IAAMwB,EAAiB,yCAAG,WAAOrQ,GAAP,wBAAAgB,EAAA,6DAChBsP,EAAOtQ,EAAEQ,OAAO+P,MAAM,IACtBC,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBF,GAAa,GAJS,SAOZ5O,EAAS,CACXC,QAAS,CACL,eAAgB,wBATN,SAaKG,KAAMsH,KAAK,cAAesH,EAAUhP,GAbzC,gBAaVM,EAbU,EAaVA,KACRgO,EAAShO,GACTsO,GAAa,GAfK,kDAiBlBhO,QAAQC,IAAR,MACA+N,GAAa,GAlBK,0DAAH,sDAsCvB,OACI,qCACI,cAAC,QAAD,CAAM/M,GAAG,qBAAqB1C,UAAU,oBAAxC,qBAGA,eAAC,GAAD,WACI,8CACCgO,EACG,cAAC,GAAD,IAEAC,GACI,cAAC,GAAD,CAAS/N,QAAQ,SAAjB,SAA2B+N,IAGlC7S,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,eAAC2D,GAAA,EAAD,CAAMC,SAnCA,SAACC,GACnBA,EAAEC,iBACFc,EnBkEqB,SAAC1E,GAAD,gDAAa,WAAO0E,EAAUQ,GAAjB,0BAAAP,EAAA,sEAElCD,EAAS,CACLjF,KAAMtE,IAHwB,EAQ9B+J,IADa/D,EAPiB,EAO9BD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYlE,EAASmE,SAbR,SAiBXC,KAAMyJ,IAAN,wBACFhP,EAAQ2I,KACzB3I,EACAmF,GApB8B,gBAiB1BM,EAjB0B,EAiB1BA,KAMRf,EAAS,CACLjF,KAAMrE,EACNuE,QAAS8F,IAGbf,EAAS,CACLjF,KAAM/E,EACNiF,QAAS8F,IA9BqB,kDAsClB,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMpE,EACNsE,QAAS+F,IA5CqB,0DAAb,wDmBjEjB4O,CAAc,CACV3L,IAAKiE,EACL3I,OACAoF,QACAP,QACAwK,QACAD,WACApI,cACAqB,mBAwBI,UACI,eAAC7I,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,mBACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAY,aACZD,MAAOH,EACPC,SAAU,SAACP,GAAD,OAAO6K,EAAQ7K,EAAEQ,OAAOC,aAI1C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,oBACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,SACL4E,YAAY,cACZD,MAAOiF,EACPnF,SAAU,SAACP,GAAD,OAAO6P,EAAS7P,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,oBACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAY,kBACZD,MAAO0E,EACP5E,SAAU,SAACP,GAAD,OAAO8P,EAAS9P,EAAEQ,OAAOC,UAEvC,cAACX,GAAA,EAAK8Q,KAAN,CACItP,GAAG,aACH0N,MAAM,cACN6B,QAAM,EACNtQ,SAAU8P,IAEbF,GAAa,cAAC,GAAD,OAGlB,eAACrQ,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,oBACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAY,cACZD,MAAOkP,EACPpP,SAAU,SAACP,GAAD,OAAO+P,EAAS/P,EAAEQ,OAAOC,aAI3C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,eAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,6BACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,SACL4E,YAAY,qBACZD,MAAOkI,EACPpI,SAAU,SAACP,GAAD,OACNiQ,EAAgBjQ,EAAEQ,OAAOC,aAKrC,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,uBACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAY,iBACZD,MAAOiP,EACPnP,SAAU,SAACP,GAAD,OAAOgQ,EAAYhQ,EAAEQ,OAAOC,aAI9C,eAACX,GAAA,EAAKqJ,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACtJ,GAAA,EAAKuJ,MAAN,0BACA,cAACvJ,GAAA,EAAKO,QAAN,CACIvE,KAAK,OACL4E,YAAY,oBACZD,MAAO6G,EACP/G,SAAU,SAACP,GAAD,OAAOkQ,EAAelQ,EAAEQ,OAAOC,aAIjD,cAACG,GAAA,EAAD,CAAQ9E,KAAK,SAAS+E,QAAQ,UAA9B,8BCpGTiQ,GAnFS,SAAC,GAAiB,IAAftR,EAAc,EAAdA,QACjBuB,EAAWmB,cAEXzD,EAAY8D,aAAY,SAAC5G,GAAD,OAAWA,EAAM8C,aACvC1C,EAA2B0C,EAA3B1C,QAASI,EAAkBsC,EAAlBtC,MAAOqC,EAAWC,EAAXD,OAGhBhB,EADU+E,aAAY,SAAC5G,GAAD,OAAWA,EAAM4B,aACvCC,SAUR,OARAgF,qBAAU,WACFhF,GAAYA,EAAS8G,QACrBvD,ETqNc,yCAAM,WAAOA,EAAUQ,GAAjB,0BAAAP,EAAA,sEAExBD,EAAS,CACLjF,KAAMd,KAHc,EAQpBuG,IADa/D,EAPO,EAOpBD,UAAaC,SAGXgE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYlE,EAASmE,SAZlB,SAgBDC,KAAMC,IAAN,cAAyBL,GAhBxB,gBAgBhBM,EAhBgB,EAgBhBA,KAERf,EAAS,CACLjF,KAAMb,GACNe,QAAS8F,IApBW,kDA4BR,kCALVC,EACF,KAAMC,UAAY,KAAMA,SAASF,KAAKC,QAChC,KAAMC,SAASF,KAAKC,QACpB,KAAMA,UAGZhB,EAASD,MAGbC,EAAS,CACLjF,KAAMZ,GACNc,QAAS+F,IAlCW,0DAAN,yDSnNdvC,EAAQW,KAAK,YAElB,CAACY,EAAUvB,EAAShC,IAGnB,qCACI,wCACCzB,EACG,cAAC,GAAD,IACAI,EACA,cAAC,GAAD,CAAS0E,QAAQ,SAAjB,SAA2B1E,IAE3B,eAACoP,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChL,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,sCACA,uCACA,sCACA,2CACA,4BAGR,gCACKnC,EAAOnB,KAAI,SAACa,GAAD,OACR,+BACI,6BAAKA,EAAM8G,MACX,6BAAK9G,EAAMP,MAAQO,EAAMP,KAAK2C,OAC9B,6BAAKpC,EAAM6K,UAAUC,UAAU,EAAG,MAClC,wCAAY9K,EAAM0N,cAClB,6BACK1N,EAAM2N,OACH3N,EAAM4N,OAAO9C,UAAU,EAAG,IAE1B,mBACIrI,UAAU,eACViD,MAAO,CAAEgB,MAAO,WAI5B,6BACK1G,EAAM6N,YACH7N,EAAM8N,YAAYhD,UAAU,EAAG,IAE/B,mBACIrI,UAAU,eACViD,MAAO,CAAEgB,MAAO,WAI5B,6BACI,cAAC,iBAAD,CAAevB,GAAE,iBAAYnF,EAAM8G,KAAnC,SACI,cAACpE,GAAA,EAAD,CACIC,QAAQ,QACRF,UAAU,SAFd,2BA3BHzC,EAAM8G,iBCkB5B+L,GA7CH,WACV,OAEE,cADA,CACC,iBAAD,CAAeC,SAAS,IAAxB,UACE,cAAC,GAAD,IACA,sBAAMrQ,UAAU,OAAhB,SACE,eAACyC,GAAA,EAAD,WACE,cAAC,KAAD,CAAO6N,KAAK,SAASC,UAAW7G,KAChC,cAAC,KAAD,CAAO4G,KAAK,YAAYC,UAAW7E,KACnC,cAAC,KAAD,CAAO4E,KAAK,cAAcC,UAAWnE,KACrC,cAAC,KAAD,CAAOkE,KAAK,aAAaC,UAAW1D,KACpC,cAAC,KAAD,CAAOyD,KAAK,YAAYC,UAAWtG,KACnC,cAAC,KAAD,CAAOqG,KAAK,WAAWC,UAAWhG,KAClC,cAAC,KAAD,CAAO+F,KAAK,eAAeC,UAAWjJ,KAEtC,cAAC,KAAD,CAAOgJ,KAAK,aAAaC,UAAWxH,KACpC,cAAC,KAAD,CAAOuH,KAAK,kBAAkBC,UAAWjD,KACzC,cAAC,KAAD,CAAOgD,KAAK,uBAAuBC,UAAW1C,KAC9C,cAAC,KAAD,CACEyC,KAAK,qBACLC,UAAWhC,GACXiC,OAAK,IAEP,cAAC,KAAD,CACEF,KAAK,iCACLC,UAAWhC,GACXiC,OAAK,IAEP,cAAC,KAAD,CAAOF,KAAK,0BAA0BC,UAAWtB,KACjD,cAAC,KAAD,CAAOqB,KAAK,mBAAmBC,UAAWJ,KAC1C,cAAC,KAAD,CAAOG,KAAK,mBAAmBC,UAAWE,GAAYD,OAAK,IAC3D,cAAC,KAAD,CACEF,KAAK,oCACLC,UAAWE,KAEb,cAAC,KAAD,CAAOH,KAAK,oBAAoBC,UAAWE,KAE3C,cAAC,KAAD,CAAOH,KAAK,IAAIC,UAAWE,GAAYD,OAAK,SAGhD,cAAC,GAAD,QChDSE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,2BCFdnP,KAGK2P,IAAIC,MAEJD,IAAIE,MAGJC,KAAK,CACFC,YAAa,KACbC,OAAO,EAEPC,cAAe,CACXC,aAAa,GAEjBC,MAAO,CACHC,aAAa,GAEjBC,cAAc,IAGPrQ,GAAf,EChBAsQ,IAAS/O,OACL,cAAC,IAAD,CAAUvE,MAAOA,GAAjB,SACI,cAAC,GAAD,MAEJ+B,SAASwR,eAAe,SAM5BrB,O","file":"static/js/main.e146dbef.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeletetReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeletetReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {};\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n            };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            // passing ...state will keep previous state before the request is done, so old product details show until new product details are requested and loaded. so we pass an empty product instead\r\n            return { ...state, loading: true };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true };\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_CLEAR_ITEMS,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n    state = {\r\n        cartItems: [],\r\n        shippingAddress: {},\r\n        paymentMethod: '',\r\n    },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(\r\n                (x) => x.product === item.product\r\n            );\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === existItem.product ? item : x\r\n                    ),\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item],\r\n                };\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(\r\n                    (item) => item.product !== action.payload\r\n                ),\r\n            };\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            };\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return { users: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDeletetReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_RESET,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            };\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            };\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            };\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_PAY_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return { loading: true };\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            };\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_DELIVER_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            };\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            };\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_LIST_RESET:\r\n            return { orders: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const { t } = useTranslation();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push('/');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder={t('Search Products')}\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                {t('Search')}\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios';\r\nimport {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_RESET,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from '../constants/userConstants';\r\nimport {\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    localStorage.removeItem('paymentMethod');\r\n\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n    dispatch({ type: ORDER_LIST_MY_RESET });\r\n    dispatch({ type: ORDER_LIST_RESET });\r\n\r\n    document.location.href = '/login';\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put('/api/users/profile', user, config);\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProfileReset = () => async (dispatch) => {\r\n    dispatch({\r\n        type: USER_UPDATE_PROFILE_RESET,\r\n    });\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get('/api/users', config);\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.delete(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/${user._id}`,\r\n            user,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        dispatch({ type: USER_DETAILS_RESET });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Same as Link but allows for bootstrap integration as well\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown, Button } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { logout } from '../actions/userActions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const { t, i18n } = useTranslation();\r\n    console.log(i18n.language);\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    const changeLanguage = () => {\r\n        const lng = i18n.language === 'en' || !i18n.language ? 'ar' : 'en';\r\n        i18n.changeLanguage(lng);\r\n    };\r\n\r\n    useEffect(() => {\r\n        var elements = document.querySelectorAll('*');\r\n        if (i18n.language === 'ar') {\r\n            elements.forEach((element) => {\r\n                element.classList.add('arabic');\r\n            });\r\n        } else {\r\n            elements.forEach((element) => {\r\n                element.classList.remove('arabic');\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>Suhaib Phone</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                    <Navbar.Collapse id='basic-navbar-nav'>\r\n                        <Route\r\n                            render={(props) => (\r\n                                <SearchBox history={props.history} />\r\n                            )}\r\n                        />\r\n                        <Button\r\n                            className='ml-auto mr-auto'\r\n                            style={{ backgroundColor: 'transparent' }}\r\n                            onClick={changeLanguage}\r\n                        >\r\n                            {i18n.language === 'en' || !i18n.language\r\n                                ? 'العربية'\r\n                                : 'English'}\r\n                        </Button>\r\n                        <Nav>\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link>\r\n                                    <i className='fas fa-shopping-cart'></i>\r\n                                    {t('Cart')}\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown\r\n                                    title={userInfo.name}\r\n                                    id='username'\r\n                                >\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>\r\n                                            {t('Profile')}\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        {t('Logout')}\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>\r\n                                        <i className='fas fa-user'></i>\r\n                                        {t('Sign In')}\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Users\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Products\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item>\r\n                                            Orders\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; Suhaib Phone\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 1\r\n                            ? 'fas fa-star'\r\n                            : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                    {' '}\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 2\r\n                            ? 'fas fa-star'\r\n                            : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                    {' '}\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 3\r\n                            ? 'fas fa-star'\r\n                            : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                    {' '}\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 4\r\n                            ? 'fas fa-star'\r\n                            : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                    {' '}\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 5\r\n                            ? 'fas fa-star'\r\n                            : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                >\r\n                    {' '}\r\n                </i>\r\n            </span>\r\n            {/* if text exists, show it */}\r\n            <span>{text && text}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n};\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Product = ({ product }) => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as='div'>\r\n                    <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} ${t('Reviews')}`}\r\n                    />\r\n                </Card.Text>\r\n\r\n                <Card.Text as='h3'>&#8362;{product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Loader = () => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <span className='sr-only'>{t('Loading...')}</span>\r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${x + 1}`\r\n                                    : `/page/${x + 1}`\r\n                                : `/admin/productlist/${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={x + 1 === page}>\r\n                            {x + 1}\r\n                        </Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Paginate;\r\n","import axios from 'axios';\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\nimport { logout } from './userActions';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n    dispatch\r\n) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get(\r\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n        );\r\n\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        // we are sending an empty obj because we are making a post request but we are not sending anything\r\n        const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/top`);\r\n\r\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated);\r\n    const { loading, error, products } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts());\r\n    }, [dispatch]);\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>\r\n                                {product.name} (&#8362;{product.price})\r\n                            </h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' conten={description} />\r\n            <meta name='keywords' conten={keywords} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to Suhaib Phone',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics, buy electronics, cheap electronics',\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\nimport { listProducts } from '../actions/productActions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Homescreen = ({ match }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const keyword = match.params.keyword;\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading, error, products, pages, page } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? (\r\n                <ProductCarousel />\r\n            ) : (\r\n                <Link to='/' className='btn btn-light'>\r\n                    {t('Go Back')}\r\n                </Link>\r\n            )}\r\n            <h1>{t('Latest Products')}</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        {products.map((product) => (\r\n                            <Col key={product._id} sm={12} md={6} lg={3} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    <Paginate\r\n                        pages={pages}\r\n                        page={page}\r\n                        keyword={keyword ? keyword : ''}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Homescreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Image,\r\n    ListGroup,\r\n    Card,\r\n    Button,\r\n    Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport {\r\n    listProductDetails,\r\n    createProductReview,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productReviewCreate = useSelector(\r\n        (state) => state.productReviewCreate\r\n    );\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate;\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0);\r\n            setComment('');\r\n        }\r\n\r\n        if (!product._id || product._id !== match.params.id) {\r\n            dispatch(listProductDetails(match.params.id));\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id));\r\n        // eslint-disable-next-line\r\n    }, [dispatch, match, successProductReview]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createProductReview(match.params.id, { rating, comment }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* can use button with LinkContainer as well */}\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                {t('Go Back')}\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        {/* medium screens and up take size 6 */}\r\n                        <Col md={6}>\r\n                            {/* fluid keeps Image inside it's container (Col) */}\r\n                            <Image\r\n                                src={product.image}\r\n                                alt={product.name}\r\n                                fluid\r\n                            />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            {/* variant flush takes away the border */}\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>{product.name}</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating\r\n                                        value={product.rating}\r\n                                        text={`${product.numReviews} ${t(\r\n                                            'reviews'\r\n                                        )}`}\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    {t('Price')}: &#8362;{product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    {t('Description')}: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>{t('Price')}:</Col>\r\n                                            <Col>\r\n                                                <strong>\r\n                                                    &#8362;{product.price}\r\n                                                </strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>{t('Status')}:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0\r\n                                                    ? t('In Stock')\r\n                                                    : t('Out Of Stock')}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>{t('Qty')}:</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={qty}\r\n                                                        onChange={(e) =>\r\n                                                            setQty(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {[\r\n                                                            ...Array(\r\n                                                                product.countInStock\r\n                                                            ).keys(),\r\n                                                        ].map((x) => (\r\n                                                            <option\r\n                                                                key={x + 1}\r\n                                                                value={x + 1}\r\n                                                            >\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className='btn-block'\r\n                                            type='button'\r\n                                            disabled={\r\n                                                product.countInStock === 0\r\n                                            }\r\n                                        >\r\n                                            {t('Add To Cart')}\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>{t('Reviews')}</h2>\r\n                            {product.reviews.length === 0 && (\r\n                                <Message>{t('No Reviews')}</Message>\r\n                            )}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map((review) => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>\r\n                                            {review.createdAt.substring(0, 10)}\r\n                                        </p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>{t('Write a Review')}</h2>\r\n                                    {successProductReview && (\r\n                                        <Message variant='success'>\r\n                                            {t('Review submitted successfully')}\r\n                                        </Message>\r\n                                    )}\r\n                                    {loadingProductReview && <Loader />}\r\n                                    {errorProductReview && (\r\n                                        <Message variant='danger'>\r\n                                            {errorProductReview}\r\n                                        </Message>\r\n                                    )}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>\r\n                                                    {t('Rating')}\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={rating}\r\n                                                    onChange={(e) =>\r\n                                                        setRating(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <option value=''>\r\n                                                        {t('Select')}\r\n                                                    </option>\r\n                                                    <option value='1'>\r\n                                                        1 - {t('Poor')}\r\n                                                    </option>\r\n                                                    <option value='2'>\r\n                                                        2 - {t('Fair')}\r\n                                                    </option>\r\n                                                    <option value='3'>\r\n                                                        3 - {t('Good')}\r\n                                                    </option>\r\n                                                    <option value='4'>\r\n                                                        4 - {t('Very Good')}\r\n                                                    </option>\r\n                                                    <option value='5'>\r\n                                                        5 - {t('Excellent')}\r\n                                                    </option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId='comment'>\r\n                                                <Form.Label>\r\n                                                    {t('Comment')}\r\n                                                </Form.Label>\r\n                                                <Form.Control\r\n                                                    as='textarea'\r\n                                                    row='3'\r\n                                                    value={comment}\r\n                                                    onChange={(e) =>\r\n                                                        setComment(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                ></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button\r\n                                                disabled={loadingProductReview}\r\n                                                type='submit'\r\n                                                variant='primary'\r\n                                            >\r\n                                                {t('Submit')}\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>\r\n                                            <Link\r\n                                                to={`/login?redirect=/product/${product._id}`}\r\n                                            >\r\n                                                {t('sign in')}\r\n                                            </Link>{' '}\r\n                                            {t('to write a review')}\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    });\r\n\r\n    localStorage.setItem(\r\n        'cartItems',\r\n        JSON.stringify(getState().cart.cartItems)\r\n    );\r\n};\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    });\r\n\r\n    localStorage.setItem(\r\n        'cartItems',\r\n        JSON.stringify(getState().cart.cartItems)\r\n    );\r\n};\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Image,\r\n    Form,\r\n    Button,\r\n    Card,\r\n} from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const productId = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty));\r\n        }\r\n    }, [dispatch, productId, qty]);\r\n\r\n    // const removeFromCartHandler = (id) => {\r\n    //     dispatch(removeFromCart(id));\r\n    // };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping');\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>{t('Shopping Cart')}</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        {t('Your cart is empty')}{' '}\r\n                        <Link to='/'>{t('Go Back')}</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key='item.product'>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image\r\n                                            src={item.image}\r\n                                            alt={item.name}\r\n                                            fluid\r\n                                            rounded\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={2}>&#8362;{item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as='select'\r\n                                            value={item.qty}\r\n                                            onChange={(e) =>\r\n                                                dispatch(\r\n                                                    addToCart(\r\n                                                        item.product,\r\n                                                        Number(e.target.value)\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {[\r\n                                                ...Array(\r\n                                                    item.countInStock\r\n                                                ).keys(),\r\n                                            ].map((x) => (\r\n                                                <option\r\n                                                    key={x + 1}\r\n                                                    value={x + 1}\r\n                                                >\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            style={{ marginTop: '5px' }}\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() =>\r\n                                                dispatch(\r\n                                                    removeFromCart(item.product)\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <i className='fas fa-trash' />\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                {t('Subtotal')} (\r\n                                {cartItems.reduce(\r\n                                    (acc, item) => acc + item.qty,\r\n                                    0\r\n                                )}\r\n                                ) {t('items')}\r\n                            </h2>\r\n                            &#8362;\r\n                            {cartItems\r\n                                .reduce(\r\n                                    (acc, item) => acc + item.qty * item.price,\r\n                                    0\r\n                                )\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                {t('Proceed To Checkout')}\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>{t('Sign in')}</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>{t('Email Address')}</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder={t('Enter email')}\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>{t('Password')}</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder={t('Enter password')}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    {t('Sign in')}\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    {t('New Customer?')}{' '}\r\n                    <Link\r\n                        to={\r\n                            redirect\r\n                                ? `/register?redirect=${redirect}`\r\n                                : '/register'\r\n                        }\r\n                    >\r\n                        {t('Register')}\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>{t('Sign Up')}</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>{t('Name')}</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder={t('Enter name')}\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>{t('Email Address')}</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder={t('Enter email')}\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>{t('Password')}</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder={t('Enter password')}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>{t('Confirm Password')}</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder={t('Confirm password')}\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    {t('Register')}\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    {t('Have an Account?')}{' '}\r\n                    <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n                    >\r\n                        {t('Login')}\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n    getUserDetails,\r\n    updateUserProfile,\r\n    updateProfileReset,\r\n} from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector((state) => state.orderListMy);\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch(updateProfileReset());\r\n                dispatch(getUserDetails('profile'));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [history, userInfo, dispatch, user, success]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        } else {\r\n            dispatch(\r\n                updateUserProfile({ id: user._id, name, email, password })\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>{t('User Profile')}</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {}\r\n                {success && (\r\n                    <Message variant='success'>{t('Profile Updated')}</Message>\r\n                )}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>{t('Name')}</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder={t('Enter name')}\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>{t('Email Address')}</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder={t('Enter email')}\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>{t('Password')}</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder={t('Enter password')}\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>{t('Confirm Password')}</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder={t('Confirm password')}\r\n                                value={confirmPassword}\r\n                                onChange={(e) =>\r\n                                    setConfirmPassword(e.target.value)\r\n                                }\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            {t('Update')}\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>{t('My Orders')}</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{t('ID')}</th>\r\n                                <th>{t('DATE')}</th>\r\n                                <th>{t('TOTAL')}</th>\r\n                                <th>{t('PAID')}</th>\r\n                                <th>{t('DELIVERED')}</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>&#8362;{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className='fas fa-times'\r\n                                                style={{ color: 'red' }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className='fas fa-times'\r\n                                                style={{ color: 'red' }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/order/${order._id}`}\r\n                                        >\r\n                                            <Button\r\n                                                variant='info'\r\n                                                className='btn-sm'\r\n                                            >\r\n                                                {t('Details')}\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants';\r\nimport { logout } from './userActions';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post('/api/orders', order, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        dispatch({ type: CART_CLEAR_ITEMS });\r\n        localStorage.removeItem('cartItems');\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const payOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            'Content-Type': 'application/json',\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/pay`,\r\n            {},\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/deliver`,\r\n            {},\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout());\r\n        }\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message,\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3 }) => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>{t('Sign in')}</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>{t('Sign in')}</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>{t('Shipping')}</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>{t('Shipping')}</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>{t('Place Order')}</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>{t('Place Order')}</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState('90100');\r\n    const [phoneNumber, setPhoneNumber] = useState(shippingAddress.phoneNumber);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            saveShippingAddress({ address, city, postalCode, phoneNumber })\r\n        );\r\n        history.push('/placeorder');\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/');\r\n        }\r\n    }, [userInfo, history]);\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>{t('Shipping')}</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>{t('Address')}</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder={t('Enter address')}\r\n                        value={address}\r\n                        required\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='phoneNumber'>\r\n                    <Form.Label>{t('Phone Number')}</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder={t('Enter phone number')}\r\n                        value={phoneNumber}\r\n                        required\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>{t('City')}</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder={t('Enter city')}\r\n                        value={city}\r\n                        required\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>{t('Postal Code')}</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder={t('Enter postal code')}\r\n                        value={postalCode}\r\n                        required\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        required\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group> */}\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    {t('Continue')}\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        history.push('/shipping');\r\n    }\r\n\r\n    // Calculate prices\r\n    const addDecimals = (num) => (Math.round(num * 100) / 100).toFixed(2);\r\n\r\n    cart.itemsPrice = addDecimals(\r\n        cart.cartItems.reduce((acc, item) => acc + item.qty * item.price, 0)\r\n    );\r\n    cart.shippingPrice = 15;\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) + Number(cart.shippingPrice)\r\n    ).toFixed(2);\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate);\r\n    const { order, success, error } = orderCreate;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/');\r\n        }\r\n\r\n        if (success) {\r\n            history.push(`/order/${order._id}`);\r\n            dispatch({ type: USER_DETAILS_RESET });\r\n            dispatch({ type: ORDER_CREATE_RESET });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success, userLogin]);\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                totalPrice: cart.totalPrice,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>{t('Shipping')}</h2>\r\n                            <p>\r\n                                <strong>{t('Address')}: </strong>\r\n                                <span style={{ direction: 'ltr' }}>\r\n                                    {cart.shippingAddress.address},{' '}\r\n                                    {cart.shippingAddress.city},{' '}\r\n                                    {cart.shippingAddress.postalCode},{' '}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <strong>{t('Phone Number')}: </strong>\r\n                                <span style={{ direction: 'ltr' }}>\r\n                                    {cart.shippingAddress.phoneNumber}\r\n                                </span>\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>{t('Order Items')}</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>{t('Your cart is empty')}</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col\r\n                                                    md={4}\r\n                                                    style={{ direction: 'ltr' }}\r\n                                                >\r\n                                                    {item.qty} x &#8362;\r\n                                                    {item.price} = &#8362;\r\n                                                    {(\r\n                                                        item.qty * item.price\r\n                                                    ).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>{t('Order Summary')}</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('Items')}</Col>\r\n                                    <Col>&#8362;{cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('Shipping')}</Col>\r\n                                    <Col>&#8362;{cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('Total')}</Col>\r\n                                    <Col>&#8362;{cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error && (\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>{error}</Message>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems.length === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    {t('Place Order')}\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from '../actions/orderActions';\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst OrderScreen = ({ history, match }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n\r\n    const orderId = match.params.id;\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        }\r\n\r\n        if (!order || successPay || successDeliver || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n            dispatch(getOrderDetails(orderId));\r\n        }\r\n    }, [\r\n        dispatch,\r\n        order,\r\n        orderId,\r\n        successPay,\r\n        history,\r\n        userInfo,\r\n        successDeliver,\r\n    ]);\r\n\r\n    const payHandler = () => {\r\n        dispatch(payOrder(orderId));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order));\r\n    };\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <>\r\n            <Link to='/admin/orderlist' className='btn btn-light y-3'>\r\n                {t('Go Back')}\r\n            </Link>\r\n            <h1 style={{ direction: 'rtl' }}>\r\n                {t('Order')} : {order._id}\r\n            </h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>{t('Shipping')}</h2>\r\n                            <p>\r\n                                <strong>{t('Name')}: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>{t('Email')}: </strong>\r\n                                <a href={`mailto:${order.user.email}`}>\r\n                                    {order.user.email}\r\n                                </a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>{t('Address')}: </strong>\r\n                                {order.shippingAddress.address},{' '}\r\n                                {order.shippingAddress.city},{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            <p>\r\n                                <strong>{t('Phone Number')}: </strong>\r\n                                <span style={{ direction: 'ltr' }}>\r\n                                    {order.shippingAddress.phoneNumber}\r\n                                </span>\r\n                            </p>\r\n\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>\r\n                                    {t('Delivered on')} : {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant='danger'>\r\n                                    {t('Not Delivered')}\r\n                                </Message>\r\n                            )}\r\n\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>\r\n                                    {t('Paid on')} : {order.paidAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant='danger'>\r\n                                    {t('Not Paid')}\r\n                                </Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>{t('Order Items')}</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>{t('Order is empty')}</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col\r\n                                                    md={4}\r\n                                                    style={{ direction: 'ltr' }}\r\n                                                >\r\n                                                    {item.qty} x &#8362;\r\n                                                    {item.price} = &#8362;\r\n                                                    {item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>{t('Order Summary')}</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('Items')}</Col>\r\n                                    <Col>&#8362;{order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('Shipping')}</Col>\r\n                                    <Col>&#8362;{order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>{t('Total')}</Col>\r\n                                    <Col>&#8362;{order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {loadingPay && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && !order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn btn-block'\r\n                                        onClick={payHandler}\r\n                                    >\r\n                                        Mark As Paid\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo &&\r\n                                userInfo.isAdmin &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark As Delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector((state) => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userDelete = useSelector((state) => state.userDelete);\r\n    const { success: successDelete } = userDelete;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>\r\n                                    <a href={`mailto:${user.email}`}>\r\n                                        {user.email}\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    {user.isAdmin ? (\r\n                                        <i\r\n                                            className='fas fa-check'\r\n                                            style={{ color: 'green' }}\r\n                                        ></i>\r\n                                    ) : (\r\n                                        <i\r\n                                            className='fas fa-times'\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer\r\n                                        to={`/admin/user/${user._id}/edit`}\r\n                                    >\r\n                                        <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                        >\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button\r\n                                        variant='danger'\r\n                                        className='btn-sm'\r\n                                        onClick={() => deleteHandler(user._id)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push('/admin/userlist');\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [dispatch, user, userId, successUpdate, history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light y-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && (\r\n                    <Message variant='danger'>{errorUpdate}</Message>\r\n                )}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport {\r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading, error, products, pages, page } = productList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n    } = productDelete;\r\n\r\n    const productCreate = useSelector((state) => state.productCreate);\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct,\r\n    } = productCreate;\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login');\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`);\r\n        } else {\r\n            dispatch(listProducts('', pageNumber));\r\n        }\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        successCreate,\r\n        createdProduct,\r\n        pageNumber,\r\n    ]);\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button\r\n                        className='my-3'\r\n                        onClick={() => dispatch(createProduct())}\r\n                    >\r\n                        <i className='fas fa-plus'></i>Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingCreate ? (\r\n                <Loader />\r\n            ) : (\r\n                errorCreate && <Message variant='danger'>{errorCreate}</Message>\r\n            )}\r\n            {loadingDelete ? (\r\n                <Loader />\r\n            ) : errorDelete ? (\r\n                <Message variant='danger'>{errorDelete}</Message>\r\n            ) : loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGOTY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map((product) => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>&#8362;{product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/admin/product/${product._id}/edit`}\r\n                                        >\r\n                                            <Button\r\n                                                variant='light'\r\n                                                className='btn-sm'\r\n                                            >\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button\r\n                                            variant='danger'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                                deleteHandler(product._id)\r\n                                            }\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            history.push('/admin/productlist');\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId));\r\n            } else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setBrand(product.brand);\r\n                setCategory(product.category);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate]);\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name,\r\n                price,\r\n                image,\r\n                brand,\r\n                category,\r\n                description,\r\n                countInStock,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light y-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate ? (\r\n                    <Loader />\r\n                ) : (\r\n                    errorUpdate && (\r\n                        <Message variant='danger'>{errorUpdate}</Message>\r\n                    )\r\n                )}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='danger'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter price'\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image url'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter brand'\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter countInStock'\r\n                                value={countInStock}\r\n                                onChange={(e) =>\r\n                                    setCountInStock(e.target.value)\r\n                                }\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter category'\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector((state) => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>&#8362;{order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className='fas fa-times'\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className='fas fa-times'\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                        >\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n  return (\n    // Empty element (fragment)\n    <BrowserRouter basename='/'>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          {/* ? makes the id optional so we can access cart from icon */}\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n          />\n          <Route path='/page/:pageNumber' component={HomeScreen} />\n          {/* exact fixes the need for switch */}\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// src/i18n.js\r\nimport i18n from 'i18next';\r\nimport Backend from 'i18next-xhr-backend';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n\r\n    // load translation using xhr -> see /public/locales\r\n    // learn more: https://github.com/i18next/i18next-xhr-backend\r\n    .use(Backend)\r\n    // pass the i18n instance to react-i18next.\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        fallbackLng: 'en',\r\n        debug: true,\r\n\r\n        interpolation: {\r\n            escapeValue: false,\r\n        },\r\n        react: {\r\n            useSuspense: false, //   <---- this will do the magic\r\n        },\r\n        keySeparator: false,\r\n    });\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}